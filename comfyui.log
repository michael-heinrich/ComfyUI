** ComfyUI start up time: 2023-12-05 23:23:38.684888

Prestartup times for custom nodes:
   0.0 seconds: /home/michael/ComfyUI/custom_nodes/rgthree-comfy
   0.0 seconds: /home/michael/ComfyUI/custom_nodes/ComfyUI-Manager

Total VRAM 6144 MB, total RAM 12678 MB
Set vram state to: NORMAL_VRAM
Device: cuda:0 NVIDIA GeForce GTX 1060 6GB : cudaMallocAsync
VAE dtype: torch.float32
Using pytorch cross attention
### Loading: ComfyUI-Manager (V1.5.2)
### ComfyUI Revision: 1758 [ad93d9a1] | Released on '2023-12-04'

[32m[1m[rgthree] Loaded 15 exciting nodes.[0m
[32m[rgthree] Optimizing ComfyUI recursive execution. [33mIf queueing and/or re-queueing seems broken, change "patch_recursive_execution" to false in rgthree_config.json [0m

[34mWAS Node Suite: [0mOpenCV Python FFMPEG support is enabled[0m
[34mWAS Node Suite [93mWarning: [0m`ffmpeg_bin_path` is not set in `/home/michael/ComfyUI/custom_nodes/was-node-suite-comfyui/was_suite_config.json` config file. Will attempt to use system ffmpeg binaries if available.[0m
[34mWAS Node Suite: [0mFinished.[0m [32mLoaded[0m [0m197[0m [32mnodes successfully.[0m

	[3m[93m"Art is the triumph over chaos."[0m[3m - John Cheever[0m


Import times for custom nodes:
   0.0 seconds: /home/michael/ComfyUI/custom_nodes/ComfyUI-Frame-Interpolation
   0.0 seconds: /home/michael/ComfyUI/custom_nodes/ComfyUI-VideoHelperSuite
   0.1 seconds: /home/michael/ComfyUI/custom_nodes/rgthree-comfy
   0.1 seconds: /home/michael/ComfyUI/custom_nodes/ComfyUI-Manager
   3.8 seconds: /home/michael/ComfyUI/custom_nodes/was-node-suite-comfyui

Starting server

To see the GUI go to: http://127.0.0.1:8188
got prompt
model_type EPS
adm 0
Using pytorch attention in VAE
Working with z of shape (1, 4, 32, 32) = 4096 dimensions.
Using pytorch attention in VAE
missing {'cond_stage_model.clip_l.text_projection', 'cond_stage_model.clip_l.logit_scale'}
Requested to load SD1ClipModel
Loading 1 new model
Requested to load BaseModel
Loading 1 new model
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 0, image 0: {0: 0.5740969929676946, 1: 0.3482074278837349, 2: 0.0776955791485706}
convolution: step 0, image 1: {0: 0.25827437283171767, 1: 0.4258224521643882, 2: 0.25827437283171767, 3: 0.05762880217217644}
convolution: step 0, image 2: {0: 0.05448868454964294, 1: 0.24420134200323332, 2: 0.4026199468942474, 3: 0.24420134200323332, 4: 0.05448868454964294}
convolution: step 0, image 3: {1: 0.05448868454964294, 2: 0.24420134200323332, 3: 0.4026199468942474, 4: 0.24420134200323332, 5: 0.05448868454964294}
convolution: step 0, image 4: {2: 0.05448868454964294, 3: 0.24420134200323332, 4: 0.4026199468942474, 5: 0.24420134200323332, 6: 0.05448868454964294}
convolution: step 0, image 5: {3: 0.05448868454964294, 4: 0.24420134200323332, 5: 0.4026199468942474, 6: 0.24420134200323332, 7: 0.05448868454964294}
convolution: step 0, image 6: {4: 0.05448868454964294, 5: 0.24420134200323332, 6: 0.4026199468942474, 7: 0.24420134200323332, 8: 0.05448868454964294}
convolution: step 0, image 7: {5: 0.05448868454964294, 6: 0.24420134200323332, 7: 0.4026199468942474, 8: 0.24420134200323332, 9: 0.05448868454964294}
convolution: step 0, image 8: {6: 0.05762880217217644, 7: 0.25827437283171767, 8: 0.4258224521643882, 9: 0.25827437283171767}
convolution: step 0, image 9: {7: 0.0776955791485706, 8: 0.3482074278837349, 9: 0.5740969929676946}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 1, image 0: {0: 0.6030327430949377, 1: 0.3376770072558071, 2: 0.05929024964925527}
convolution: step 1, image 1: {0: 0.2524353827001471, 1: 0.45080594181104766, 2: 0.2524353827001471, 3: 0.04432329278865826}
convolution: step 1, image 2: {0: 0.04244211835044078, 1: 0.24172149031174864, 2: 0.4316727826756212, 3: 0.24172149031174864, 4: 0.04244211835044078}
convolution: step 1, image 3: {1: 0.04244211835044078, 2: 0.24172149031174864, 3: 0.4316727826756212, 4: 0.24172149031174864, 5: 0.04244211835044078}
convolution: step 1, image 4: {2: 0.04244211835044078, 3: 0.24172149031174864, 4: 0.4316727826756212, 5: 0.24172149031174864, 6: 0.04244211835044078}
convolution: step 1, image 5: {3: 0.04244211835044078, 4: 0.24172149031174864, 5: 0.4316727826756212, 6: 0.24172149031174864, 7: 0.04244211835044078}
convolution: step 1, image 6: {4: 0.04244211835044078, 5: 0.24172149031174864, 6: 0.4316727826756212, 7: 0.24172149031174864, 8: 0.04244211835044078}
convolution: step 1, image 7: {5: 0.04244211835044078, 6: 0.24172149031174864, 7: 0.4316727826756212, 8: 0.24172149031174864, 9: 0.04244211835044078}
convolution: step 1, image 8: {6: 0.04432329278865825, 7: 0.2524353827001471, 8: 0.4508059418110476, 9: 0.2524353827001471}
convolution: step 1, image 9: {7: 0.05929024964925527, 8: 0.3376770072558071, 9: 0.6030327430949377}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 2, image 0: {0: 0.6361063592806936, 1: 0.32208330568016824, 2: 0.0418103350391381}
convolution: step 2, image 1: {0: 0.24361801128293276, 1: 0.48113939306830433, 2: 0.24361801128293276, 3: 0.03162458436583016}
convolution: step 2, image 2: {0: 0.030655128663176164, 1: 0.23614986980238736, 2: 0.46639000306887296, 3: 0.23614986980238736, 4: 0.030655128663176164}
convolution: step 2, image 3: {1: 0.030655128663176164, 2: 0.23614986980238736, 3: 0.46639000306887296, 4: 0.23614986980238736, 5: 0.030655128663176164}
convolution: step 2, image 4: {2: 0.030655128663176164, 3: 0.23614986980238736, 4: 0.46639000306887296, 5: 0.23614986980238736, 6: 0.030655128663176164}
convolution: step 2, image 5: {3: 0.030655128663176164, 4: 0.23614986980238736, 5: 0.46639000306887296, 6: 0.23614986980238736, 7: 0.030655128663176164}
convolution: step 2, image 6: {4: 0.030655128663176164, 5: 0.23614986980238736, 6: 0.46639000306887296, 7: 0.23614986980238736, 8: 0.030655128663176164}
convolution: step 2, image 7: {5: 0.030655128663176164, 6: 0.23614986980238736, 7: 0.46639000306887296, 8: 0.23614986980238736, 9: 0.030655128663176164}
convolution: step 2, image 8: {6: 0.03162458436583016, 7: 0.24361801128293276, 8: 0.48113939306830433, 9: 0.24361801128293276}
convolution: step 2, image 9: {7: 0.0418103350391381, 8: 0.32208330568016824, 9: 0.6361063592806936}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 3, image 0: {0: 0.6738219019990425, 1: 0.29977988247511667, 2: 0.02639821552584092}
convolution: step 3, image 1: {0: 0.23063896165576767, 1: 0.5184123181810688, 2: 0.23063896165576767, 3: 0.020309758507395803}
convolution: step 3, image 2: {0: 0.019905482955594595, 1: 0.22604798173563276, 2: 0.5080930706175453, 3: 0.22604798173563276, 4: 0.019905482955594595}
convolution: step 3, image 3: {1: 0.019905482955594595, 2: 0.22604798173563276, 3: 0.5080930706175453, 4: 0.22604798173563276, 5: 0.019905482955594595}
convolution: step 3, image 4: {2: 0.019905482955594595, 3: 0.22604798173563276, 4: 0.5080930706175453, 5: 0.22604798173563276, 6: 0.019905482955594595}
convolution: step 3, image 5: {3: 0.019905482955594595, 4: 0.22604798173563276, 5: 0.5080930706175453, 6: 0.22604798173563276, 7: 0.019905482955594595}
convolution: step 3, image 6: {4: 0.019905482955594595, 5: 0.22604798173563276, 6: 0.5080930706175453, 7: 0.22604798173563276, 8: 0.019905482955594595}
convolution: step 3, image 7: {5: 0.019905482955594595, 6: 0.22604798173563276, 7: 0.5080930706175453, 8: 0.22604798173563276, 9: 0.019905482955594595}
convolution: step 3, image 8: {6: 0.020309758507395803, 7: 0.23063896165576767, 8: 0.5184123181810688, 9: 0.23063896165576767}
convolution: step 3, image 9: {7: 0.02639821552584092, 8: 0.29977988247511667, 9: 0.6738219019990425}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 4, image 0: {0: 0.7167676792469991, 1: 0.26901086531935875, 2: 0.014221455433642123}
convolution: step 4, image 1: {0: 0.21198468245711954, 1: 0.5648239103662975, 2: 0.21198468245711954, 3: 0.01120672471946342}
convolution: step 4, image 2: {0: 0.011082525902478026, 1: 0.2096353567228599, 2: 0.558564234749324, 3: 0.2096353567228599, 4: 0.011082525902478026}
convolution: step 4, image 3: {1: 0.011082525902478026, 2: 0.2096353567228599, 3: 0.558564234749324, 4: 0.2096353567228599, 5: 0.011082525902478026}
convolution: step 4, image 4: {2: 0.011082525902478026, 3: 0.2096353567228599, 4: 0.558564234749324, 5: 0.2096353567228599, 6: 0.011082525902478026}
convolution: step 4, image 5: {3: 0.011082525902478026, 4: 0.2096353567228599, 5: 0.558564234749324, 6: 0.2096353567228599, 7: 0.011082525902478026}
convolution: step 4, image 6: {4: 0.011082525902478026, 5: 0.2096353567228599, 6: 0.558564234749324, 7: 0.2096353567228599, 8: 0.011082525902478026}
convolution: step 4, image 7: {5: 0.011082525902478026, 6: 0.2096353567228599, 7: 0.558564234749324, 8: 0.2096353567228599, 9: 0.011082525902478026}
convolution: step 4, image 8: {6: 0.01120672471946342, 7: 0.21198468245711954, 8: 0.5648239103662975, 9: 0.21198468245711954}
convolution: step 4, image 9: {7: 0.014221455433642123, 8: 0.26901086531935875, 9: 0.7167676792469991}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 5, image 0: {0: 0.7656117484586703, 1: 0.22833152782744937, 2: 0.006056723713880469}
convolution: step 5, image 1: {0: 0.18588754147774703, 1: 0.6232940628112088, 2: 0.18588754147774703, 3: 0.004930854233297258}
convolution: step 5, image 2: {0: 0.0049066602070440045, 1: 0.18497545447499292, 2: 0.6202357706359263, 3: 0.18497545447499292, 4: 0.0049066602070440045}
convolution: step 5, image 3: {1: 0.0049066602070440045, 2: 0.18497545447499292, 3: 0.6202357706359263, 4: 0.18497545447499292, 5: 0.0049066602070440045}
convolution: step 5, image 4: {2: 0.0049066602070440045, 3: 0.18497545447499292, 4: 0.6202357706359263, 5: 0.18497545447499292, 6: 0.0049066602070440045}
convolution: step 5, image 5: {3: 0.0049066602070440045, 4: 0.18497545447499292, 5: 0.6202357706359263, 6: 0.18497545447499292, 7: 0.0049066602070440045}
convolution: step 5, image 6: {4: 0.0049066602070440045, 5: 0.18497545447499292, 6: 0.6202357706359263, 7: 0.18497545447499292, 8: 0.0049066602070440045}
convolution: step 5, image 7: {5: 0.0049066602070440045, 6: 0.18497545447499292, 7: 0.6202357706359263, 8: 0.18497545447499292, 9: 0.0049066602070440045}
convolution: step 5, image 8: {6: 0.004930854233297258, 7: 0.18588754147774703, 8: 0.6232940628112088, 9: 0.18588754147774703}
convolution: step 5, image 9: {7: 0.006056723713880468, 8: 0.22833152782744934, 9: 0.7656117484586702}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 6, image 0: {0: 0.8207130523101699, 1: 0.17749164517732488, 2: 0.0017953025125052608}
convolution: step 6, image 1: {0: 0.15073707393532754, 1: 0.6970011682644035, 2: 0.15073707393532754, 3: 0.001524683864941476}
convolution: step 6, image 2: {0: 0.0015223627430305893, 1: 0.15050759742997494, 2: 0.695940079653989, 3: 0.15050759742997494, 4: 0.0015223627430305893}
convolution: step 6, image 3: {1: 0.0015223627430305893, 2: 0.15050759742997494, 3: 0.695940079653989, 4: 0.15050759742997494, 5: 0.0015223627430305893}
convolution: step 6, image 4: {2: 0.0015223627430305893, 3: 0.15050759742997494, 4: 0.695940079653989, 5: 0.15050759742997494, 6: 0.0015223627430305893}
convolution: step 6, image 5: {3: 0.0015223627430305893, 4: 0.15050759742997494, 5: 0.695940079653989, 6: 0.15050759742997494, 7: 0.0015223627430305893}
convolution: step 6, image 6: {4: 0.0015223627430305893, 5: 0.15050759742997494, 6: 0.695940079653989, 7: 0.15050759742997494, 8: 0.0015223627430305893}
convolution: step 6, image 7: {5: 0.0015223627430305893, 6: 0.15050759742997494, 7: 0.695940079653989, 8: 0.15050759742997494, 9: 0.0015223627430305893}
convolution: step 6, image 8: {6: 0.001524683864941476, 7: 0.15073707393532754, 8: 0.6970011682644035, 9: 0.15073707393532754}
convolution: step 6, image 9: {7: 0.0017953025125052608, 8: 0.17749164517732488, 9: 0.8207130523101699}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 7, image 0: {0: 0.8805369017749616, 1: 0.11916771100200384, 2: 0.00029538722303456454}
convolution: step 7, image 1: {0: 0.10647886802891374, 1: 0.7867783292162768, 2: 0.10647886802891374, 3: 0.00026393472589563983}
convolution: step 7, image 2: {0: 0.00026386508273735414, 1: 0.10645077197359151, 2: 0.7865707258873422, 3: 0.10645077197359151, 4: 0.00026386508273735414}
convolution: step 7, image 3: {1: 0.00026386508273735414, 2: 0.10645077197359151, 3: 0.7865707258873422, 4: 0.10645077197359151, 5: 0.00026386508273735414}
convolution: step 7, image 4: {2: 0.00026386508273735414, 3: 0.10645077197359151, 4: 0.7865707258873422, 5: 0.10645077197359151, 6: 0.00026386508273735414}
convolution: step 7, image 5: {3: 0.00026386508273735414, 4: 0.10645077197359151, 5: 0.7865707258873422, 6: 0.10645077197359151, 7: 0.00026386508273735414}
convolution: step 7, image 6: {4: 0.00026386508273735414, 5: 0.10645077197359151, 6: 0.7865707258873422, 7: 0.10645077197359151, 8: 0.00026386508273735414}
convolution: step 7, image 7: {5: 0.00026386508273735414, 6: 0.10645077197359151, 7: 0.7865707258873422, 8: 0.10645077197359151, 9: 0.00026386508273735414}
convolution: step 7, image 8: {6: 0.00026393472589563983, 7: 0.10647886802891374, 8: 0.7867783292162768, 9: 0.10647886802891374}
convolution: step 7, image 9: {7: 0.00029538722303456454, 8: 0.11916771100200384, 9: 0.8805369017749616}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 8, image 0: {0: 0.9383088282923016, 1: 0.06167365867155375, 2: 1.7513036144605368e-05}
convolution: step 8, image 1: {0: 0.05809097566640627, 1: 0.8838015529803992, 2: 0.05809097566640627, 3: 1.64956867880842e-05}
convolution: step 8, image 2: {0: 1.6495414684890126e-05, 1: 0.05809001743167321, 2: 0.8837869743072838, 3: 0.05809001743167321, 4: 1.6495414684890126e-05}
convolution: step 8, image 3: {1: 1.6495414684890126e-05, 2: 0.05809001743167321, 3: 0.8837869743072838, 4: 0.05809001743167321, 5: 1.6495414684890126e-05}
convolution: step 8, image 4: {2: 1.6495414684890126e-05, 3: 0.05809001743167321, 4: 0.8837869743072838, 5: 0.05809001743167321, 6: 1.6495414684890126e-05}
convolution: step 8, image 5: {3: 1.6495414684890126e-05, 4: 0.05809001743167321, 5: 0.8837869743072838, 6: 0.05809001743167321, 7: 1.6495414684890126e-05}
convolution: step 8, image 6: {4: 1.6495414684890126e-05, 5: 0.05809001743167321, 6: 0.8837869743072838, 7: 0.05809001743167321, 8: 1.6495414684890126e-05}
convolution: step 8, image 7: {5: 1.6495414684890126e-05, 6: 0.05809001743167321, 7: 0.8837869743072838, 8: 0.05809001743167321, 9: 1.6495414684890126e-05}
convolution: step 8, image 8: {6: 1.6495686788084208e-05, 7: 0.05809097566640628, 8: 0.8838015529803994, 9: 0.05809097566640628}
convolution: step 8, image 9: {7: 1.751303614460537e-05, 8: 0.06167365867155376, 9: 0.9383088282923018}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 9, image 0: {0: 0.9805447664279735, 1: 0.01945508161179384, 2: 1.519602326468811e-07}
convolution: step 9, image 1: {0: 0.0190838046351534, 1: 0.9618322416694399, 2: 0.0190838046351534, 3: 1.4906025325473555e-07}
convolution: step 9, image 2: {0: 1.490602310357798e-07, 1: 0.019083801790517073, 2: 0.9618320982985038, 3: 0.019083801790517073, 4: 1.490602310357798e-07}
convolution: step 9, image 3: {1: 1.490602310357798e-07, 2: 0.019083801790517073, 3: 0.9618320982985038, 4: 0.019083801790517073, 5: 1.490602310357798e-07}
convolution: step 9, image 4: {2: 1.490602310357798e-07, 3: 0.019083801790517073, 4: 0.9618320982985038, 5: 0.019083801790517073, 6: 1.490602310357798e-07}
convolution: step 9, image 5: {3: 1.490602310357798e-07, 4: 0.019083801790517073, 5: 0.9618320982985038, 6: 0.019083801790517073, 7: 1.490602310357798e-07}
convolution: step 9, image 6: {4: 1.490602310357798e-07, 5: 0.019083801790517073, 6: 0.9618320982985038, 7: 0.019083801790517073, 8: 1.490602310357798e-07}
convolution: step 9, image 7: {5: 1.490602310357798e-07, 6: 0.019083801790517073, 7: 0.9618320982985038, 8: 0.019083801790517073, 9: 1.490602310357798e-07}
convolution: step 9, image 8: {6: 1.4906025325473555e-07, 7: 0.0190838046351534, 8: 0.9618322416694399, 9: 0.0190838046351534}
convolution: step 9, image 9: {7: 1.519602326468811e-07, 8: 0.01945508161179384, 9: 0.9805447664279735}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 10, image 0: {0: 0.9978172835318574, 1: 0.00218271644529531, 2: 2.2847370036902745e-11}
convolution: step 10, image 1: {0: 0.0021779625705752774, 1: 0.9956440748360518, 2: 0.0021779625705752774, 3: 2.2797609320126284e-11}
convolution: step 10, image 2: {0: 2.2797609319606556e-11, 1: 0.0021779625705256253, 2: 0.9956440748133536, 3: 0.0021779625705256253, 4: 2.2797609319606556e-11}
convolution: step 10, image 3: {1: 2.2797609319606556e-11, 2: 0.0021779625705256253, 3: 0.9956440748133536, 4: 0.0021779625705256253, 5: 2.2797609319606556e-11}
convolution: step 10, image 4: {2: 2.2797609319606556e-11, 3: 0.0021779625705256253, 4: 0.9956440748133536, 5: 0.0021779625705256253, 6: 2.2797609319606556e-11}
convolution: step 10, image 5: {3: 2.2797609319606556e-11, 4: 0.0021779625705256253, 5: 0.9956440748133536, 6: 0.0021779625705256253, 7: 2.2797609319606556e-11}
convolution: step 10, image 6: {4: 2.2797609319606556e-11, 5: 0.0021779625705256253, 6: 0.9956440748133536, 7: 0.0021779625705256253, 8: 2.2797609319606556e-11}
convolution: step 10, image 7: {5: 2.2797609319606556e-11, 6: 0.0021779625705256253, 7: 0.9956440748133536, 8: 0.0021779625705256253, 9: 2.2797609319606556e-11}
convolution: step 10, image 8: {6: 2.2797609320126284e-11, 7: 0.0021779625705752774, 8: 0.9956440748360518, 9: 0.0021779625705752774}
convolution: step 10, image 9: {7: 2.2847370036902745e-11, 8: 0.00218271644529531, 9: 0.9978172835318574}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 11, image 0: {0: 0.9999813358792423, 1: 1.866412075761519e-05, 2: 1.2135410180269557e-19}
convolution: step 11, image 1: {0: 1.8663772414713046e-05, 1: 0.9999626724551705, 2: 1.8663772414713046e-05, 3: 1.2135183687735792e-19}
convolution: step 11, image 2: {0: 1.2135183687735792e-19, 1: 1.8663772414713046e-05, 2: 0.9999626724551705, 3: 1.8663772414713046e-05, 4: 1.2135183687735792e-19}
convolution: step 11, image 3: {1: 1.2135183687735792e-19, 2: 1.8663772414713046e-05, 3: 0.9999626724551705, 4: 1.8663772414713046e-05, 5: 1.2135183687735792e-19}
convolution: step 11, image 4: {2: 1.2135183687735792e-19, 3: 1.8663772414713046e-05, 4: 0.9999626724551705, 5: 1.8663772414713046e-05, 6: 1.2135183687735792e-19}
convolution: step 11, image 5: {3: 1.2135183687735792e-19, 4: 1.8663772414713046e-05, 5: 0.9999626724551705, 6: 1.8663772414713046e-05, 7: 1.2135183687735792e-19}
convolution: step 11, image 6: {4: 1.2135183687735792e-19, 5: 1.8663772414713046e-05, 6: 0.9999626724551705, 7: 1.8663772414713046e-05, 8: 1.2135183687735792e-19}
convolution: step 11, image 7: {5: 1.2135183687735792e-19, 6: 1.8663772414713046e-05, 7: 0.9999626724551705, 8: 1.8663772414713046e-05, 9: 1.2135183687735792e-19}
convolution: step 11, image 8: {6: 1.2135183687735792e-19, 7: 1.8663772414713046e-05, 8: 0.9999626724551705, 9: 1.8663772414713046e-05}
convolution: step 11, image 9: {7: 1.2135410180269557e-19, 8: 1.866412075761519e-05, 9: 0.9999813358792423}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 12, image 0: {0: 0.9999999999771028, 1: 2.2897348455931566e-11, 2: 2.7487850078474318e-43}
convolution: step 12, image 1: {0: 2.2897348455407282e-11, 1: 0.9999999999542055, 2: 2.2897348455407282e-11, 3: 2.748785007784492e-43}
convolution: step 12, image 2: {0: 2.748785007784492e-43, 1: 2.2897348455407282e-11, 2: 0.9999999999542055, 3: 2.2897348455407282e-11, 4: 2.748785007784492e-43}
convolution: step 12, image 3: {1: 2.748785007784492e-43, 2: 2.2897348455407282e-11, 3: 0.9999999999542055, 4: 2.2897348455407282e-11, 5: 2.748785007784492e-43}
convolution: step 12, image 4: {2: 2.748785007784492e-43, 3: 2.2897348455407282e-11, 4: 0.9999999999542055, 5: 2.2897348455407282e-11, 6: 2.748785007784492e-43}
convolution: step 12, image 5: {3: 2.748785007784492e-43, 4: 2.2897348455407282e-11, 5: 0.9999999999542055, 6: 2.2897348455407282e-11, 7: 2.748785007784492e-43}
convolution: step 12, image 6: {4: 2.748785007784492e-43, 5: 2.2897348455407282e-11, 6: 0.9999999999542055, 7: 2.2897348455407282e-11, 8: 2.748785007784492e-43}
convolution: step 12, image 7: {5: 2.748785007784492e-43, 6: 2.2897348455407282e-11, 7: 0.9999999999542055, 8: 2.2897348455407282e-11, 9: 2.748785007784492e-43}
convolution: step 12, image 8: {6: 2.748785007784492e-43, 7: 2.2897348455407282e-11, 8: 0.9999999999542055, 9: 2.2897348455407282e-11}
convolution: step 12, image 9: {7: 2.7487850078474318e-43, 8: 2.2897348455931566e-11, 9: 0.9999999999771028}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 13, image 0: {0: 1.0, 1: 2.7487850079099806e-43, 2: 5.709040105862154e-171}
convolution: step 13, image 1: {0: 2.7487850079099806e-43, 1: 1.0, 2: 2.7487850079099806e-43, 3: 5.709040105862154e-171}
convolution: step 13, image 2: {0: 5.709040105862154e-171, 1: 2.7487850079099806e-43, 2: 1.0, 3: 2.7487850079099806e-43, 4: 5.709040105862154e-171}
convolution: step 13, image 3: {1: 5.709040105862154e-171, 2: 2.7487850079099806e-43, 3: 1.0, 4: 2.7487850079099806e-43, 5: 5.709040105862154e-171}
convolution: step 13, image 4: {2: 5.709040105862154e-171, 3: 2.7487850079099806e-43, 4: 1.0, 5: 2.7487850079099806e-43, 6: 5.709040105862154e-171}
convolution: step 13, image 5: {3: 5.709040105862154e-171, 4: 2.7487850079099806e-43, 5: 1.0, 6: 2.7487850079099806e-43, 7: 5.709040105862154e-171}
convolution: step 13, image 6: {4: 5.709040105862154e-171, 5: 2.7487850079099806e-43, 6: 1.0, 7: 2.7487850079099806e-43, 8: 5.709040105862154e-171}
convolution: step 13, image 7: {5: 5.709040105862154e-171, 6: 2.7487850079099806e-43, 7: 1.0, 8: 2.7487850079099806e-43, 9: 5.709040105862154e-171}
convolution: step 13, image 8: {6: 5.709040105862154e-171, 7: 2.7487850079099806e-43, 8: 1.0, 9: 2.7487850079099806e-43}
convolution: step 13, image 9: {7: 5.709040105862154e-171, 8: 2.7487850079099806e-43, 9: 1.0}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 14, image 0: {0: 1.0, 1: 0.0, 2: 0.0}
convolution: step 14, image 1: {0: 0.0, 1: 1.0, 2: 0.0, 3: 0.0}
convolution: step 14, image 2: {0: 0.0, 1: 0.0, 2: 1.0, 3: 0.0, 4: 0.0}
convolution: step 14, image 3: {1: 0.0, 2: 0.0, 3: 1.0, 4: 0.0, 5: 0.0}
convolution: step 14, image 4: {2: 0.0, 3: 0.0, 4: 1.0, 5: 0.0, 6: 0.0}
convolution: step 14, image 5: {3: 0.0, 4: 0.0, 5: 1.0, 6: 0.0, 7: 0.0}
convolution: step 14, image 6: {4: 0.0, 5: 0.0, 6: 1.0, 7: 0.0, 8: 0.0}
convolution: step 14, image 7: {5: 0.0, 6: 0.0, 7: 1.0, 8: 0.0, 9: 0.0}
convolution: step 14, image 8: {6: 0.0, 7: 0.0, 8: 1.0, 9: 0.0}
convolution: step 14, image 9: {7: 0.0, 8: 0.0, 9: 1.0}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:04<00:00,  6.21s/it]100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [02:04<00:00,  6.22s/it]
Requested to load AutoencoderKL
Loading 1 new model
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Prompt executed in 143.00 seconds
gc collect
got prompt
Requested to load BaseModel
Loading 1 new model
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 0, image 0: {0: 0.4017633292405399, 1: 0.3545548936268515, 2: 0.24368177713260863}
convolution: step 0, image 1: {0: 0.2617501108999154, 1: 0.29660173325630934, 2: 0.2617501108999154, 3: 0.17989804494385983}
convolution: step 0, image 2: {0: 0.15246914402033734, 1: 0.22184129554377693, 2: 0.25137912087177144, 3: 0.22184129554377693, 4: 0.15246914402033734}
convolution: step 0, image 3: {1: 0.15246914402033734, 2: 0.22184129554377693, 3: 0.25137912087177144, 4: 0.22184129554377693, 5: 0.15246914402033734}
convolution: step 0, image 4: {2: 0.15246914402033734, 3: 0.22184129554377693, 4: 0.25137912087177144, 5: 0.22184129554377693, 6: 0.15246914402033734}
convolution: step 0, image 5: {3: 0.15246914402033734, 4: 0.22184129554377693, 5: 0.25137912087177144, 6: 0.22184129554377693, 7: 0.15246914402033734}
convolution: step 0, image 6: {4: 0.15246914402033734, 5: 0.22184129554377693, 6: 0.25137912087177144, 7: 0.22184129554377693, 8: 0.15246914402033734}
convolution: step 0, image 7: {5: 0.15246914402033734, 6: 0.22184129554377693, 7: 0.25137912087177144, 8: 0.22184129554377693, 9: 0.15246914402033734}
convolution: step 0, image 8: {6: 0.17989804494385983, 7: 0.2617501108999154, 8: 0.29660173325630934, 9: 0.2617501108999154}
convolution: step 0, image 9: {7: 0.24368177713260863, 8: 0.3545548936268515, 9: 0.4017633292405399}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 1, image 0: {0: 0.41236900559919, 1: 0.3567189364897765, 2: 0.2309120579110335}
convolution: step 1, image 1: {0: 0.2629276609145822, 1: 0.30394578752332274, 2: 0.2629276609145822, 3: 0.17019889064751292}
convolution: step 1, image 2: {0: 0.14544441291799193, 1: 0.22468630163295994, 2: 0.2597385708980964, 3: 0.22468630163295994, 4: 0.14544441291799193}
convolution: step 1, image 3: {1: 0.14544441291799193, 2: 0.22468630163295994, 3: 0.2597385708980964, 4: 0.22468630163295994, 5: 0.14544441291799193}
convolution: step 1, image 4: {2: 0.14544441291799193, 3: 0.22468630163295994, 4: 0.2597385708980964, 5: 0.22468630163295994, 6: 0.14544441291799193}
convolution: step 1, image 5: {3: 0.14544441291799193, 4: 0.22468630163295994, 5: 0.2597385708980964, 6: 0.22468630163295994, 7: 0.14544441291799193}
convolution: step 1, image 6: {4: 0.14544441291799193, 5: 0.22468630163295994, 6: 0.2597385708980964, 7: 0.22468630163295994, 8: 0.14544441291799193}
convolution: step 1, image 7: {5: 0.14544441291799193, 6: 0.22468630163295994, 7: 0.2597385708980964, 8: 0.22468630163295994, 9: 0.14544441291799193}
convolution: step 1, image 8: {6: 0.17019889064751292, 7: 0.2629276609145822, 8: 0.30394578752332274, 9: 0.2629276609145822}
convolution: step 1, image 9: {7: 0.2309120579110335, 8: 0.3567189364897765, 9: 0.41236900559919}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 2, image 0: {0: 0.4255530538862166, 1: 0.3589742781578235, 2: 0.2154726679559599}
convolution: step 2, image 1: {0: 0.2641508996361845, 1: 0.3131428318592468, 2: 0.2641508996361845, 3: 0.15855536886838423}
convolution: step 2, image 2: {0: 0.13685609952613034, 1: 0.228000237825658, 2: 0.27028732529642346, 3: 0.228000237825658, 4: 0.13685609952613034}
convolution: step 2, image 3: {1: 0.13685609952613034, 2: 0.228000237825658, 3: 0.27028732529642346, 4: 0.228000237825658, 5: 0.13685609952613034}
convolution: step 2, image 4: {2: 0.13685609952613034, 3: 0.228000237825658, 4: 0.27028732529642346, 5: 0.228000237825658, 6: 0.13685609952613034}
convolution: step 2, image 5: {3: 0.13685609952613034, 4: 0.228000237825658, 5: 0.27028732529642346, 6: 0.228000237825658, 7: 0.13685609952613034}
convolution: step 2, image 6: {4: 0.13685609952613034, 5: 0.228000237825658, 6: 0.27028732529642346, 7: 0.228000237825658, 8: 0.13685609952613034}
convolution: step 2, image 7: {5: 0.13685609952613034, 6: 0.228000237825658, 7: 0.27028732529642346, 8: 0.228000237825658, 9: 0.13685609952613034}
convolution: step 2, image 8: {6: 0.15855536886838423, 7: 0.2641508996361845, 8: 0.3131428318592468, 9: 0.2641508996361845}
convolution: step 2, image 9: {7: 0.2154726679559599, 8: 0.3589742781578235, 9: 0.4255530538862166}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 3, image 0: {0: 0.44216519305557406, 1: 0.36111779727830834, 2: 0.19671700966611744}
convolution: step 3, image 1: {0: 0.2653097314577766, 1: 0.3248544644260238, 2: 0.2653097314577766, 3: 0.144526072658423}
convolution: step 3, image 2: {0: 0.1262759111487327, 1: 0.2318075033813203, 2: 0.28383317093989413, 3: 0.2318075033813203, 4: 0.1262759111487327}
convolution: step 3, image 3: {1: 0.1262759111487327, 2: 0.2318075033813203, 3: 0.28383317093989413, 4: 0.2318075033813203, 5: 0.1262759111487327}
convolution: step 3, image 4: {2: 0.1262759111487327, 3: 0.2318075033813203, 4: 0.28383317093989413, 5: 0.2318075033813203, 6: 0.1262759111487327}
convolution: step 3, image 5: {3: 0.1262759111487327, 4: 0.2318075033813203, 5: 0.28383317093989413, 6: 0.2318075033813203, 7: 0.1262759111487327}
convolution: step 3, image 6: {4: 0.1262759111487327, 5: 0.2318075033813203, 6: 0.28383317093989413, 7: 0.2318075033813203, 8: 0.1262759111487327}
convolution: step 3, image 7: {5: 0.1262759111487327, 6: 0.2318075033813203, 7: 0.28383317093989413, 8: 0.2318075033813203, 9: 0.1262759111487327}
convolution: step 3, image 8: {6: 0.14452607265842302, 7: 0.2653097314577766, 8: 0.32485446442602384, 9: 0.2653097314577766}
convolution: step 3, image 9: {7: 0.1967170096661175, 8: 0.36111779727830845, 9: 0.44216519305557417}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 4, image 0: {0: 0.46338867189440147, 1: 0.36269641646162004, 2: 0.17391491164397846}
convolution: step 4, image 1: {0: 0.26616083529697554, 1: 0.34005275591583145, 2: 0.26616083529697554, 3: 0.12762557349021747}
convolution: step 4, image 2: {0: 0.11318080796553046, 1: 0.23603653690928336, 2: 0.3015653102503723, 3: 0.23603653690928336, 4: 0.11318080796553046}
convolution: step 4, image 3: {1: 0.11318080796553046, 2: 0.23603653690928336, 3: 0.3015653102503723, 4: 0.23603653690928336, 5: 0.11318080796553046}
convolution: step 4, image 4: {2: 0.11318080796553046, 3: 0.23603653690928336, 4: 0.3015653102503723, 5: 0.23603653690928336, 6: 0.11318080796553046}
convolution: step 4, image 5: {3: 0.11318080796553046, 4: 0.23603653690928336, 5: 0.3015653102503723, 6: 0.23603653690928336, 7: 0.11318080796553046}
convolution: step 4, image 6: {4: 0.11318080796553046, 5: 0.23603653690928336, 6: 0.3015653102503723, 7: 0.23603653690928336, 8: 0.11318080796553046}
convolution: step 4, image 7: {5: 0.11318080796553046, 6: 0.23603653690928336, 7: 0.3015653102503723, 8: 0.23603653690928336, 9: 0.11318080796553046}
convolution: step 4, image 8: {6: 0.12762557349021747, 7: 0.26616083529697554, 8: 0.34005275591583145, 9: 0.26616083529697554}
convolution: step 4, image 9: {7: 0.17391491164397846, 8: 0.36269641646162004, 9: 0.46338867189440147}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 5, image 0: {0: 0.49086370300520654, 1: 0.36274400418077, 2: 0.1463922928140235}
convolution: step 5, image 1: {0: 0.26618646133676294, 1: 0.36020243090359083, 2: 0.26618646133676294, 3: 0.10742464642288334}
convolution: step 5, image 2: {0: 0.0970040234971093, 1: 0.2403653035866392, 2: 0.32526134583250305, 3: 0.2403653035866392, 4: 0.0970040234971093}
convolution: step 5, image 3: {1: 0.0970040234971093, 2: 0.2403653035866392, 3: 0.32526134583250305, 4: 0.2403653035866392, 5: 0.0970040234971093}
convolution: step 5, image 4: {2: 0.0970040234971093, 3: 0.2403653035866392, 4: 0.32526134583250305, 5: 0.2403653035866392, 6: 0.0970040234971093}
convolution: step 5, image 5: {3: 0.0970040234971093, 4: 0.2403653035866392, 5: 0.32526134583250305, 6: 0.2403653035866392, 7: 0.0970040234971093}
convolution: step 5, image 6: {4: 0.0970040234971093, 5: 0.2403653035866392, 6: 0.32526134583250305, 7: 0.2403653035866392, 8: 0.0970040234971093}
convolution: step 5, image 7: {5: 0.0970040234971093, 6: 0.2403653035866392, 7: 0.32526134583250305, 8: 0.2403653035866392, 9: 0.0970040234971093}
convolution: step 5, image 8: {6: 0.10742464642288334, 7: 0.26618646133676294, 8: 0.36020243090359083, 9: 0.26618646133676294}
convolution: step 5, image 9: {7: 0.1463922928140235, 8: 0.36274400418077, 9: 0.49086370300520654}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 6, image 0: {0: 0.5268132348059299, 1: 0.35925541308057307, 2: 0.11393135211349699}
convolution: step 6, image 1: {0: 0.26430309537364144, 1: 0.3875748661629217, 2: 0.26430309537364144, 3: 0.08381894308979548}
convolution: step 6, image 2: {0: 0.07733666552352463, 1: 0.24386277528989792, 2: 0.357601118373155, 3: 0.24386277528989792, 4: 0.07733666552352463}
convolution: step 6, image 3: {1: 0.07733666552352463, 2: 0.24386277528989792, 3: 0.357601118373155, 4: 0.24386277528989792, 5: 0.07733666552352463}
convolution: step 6, image 4: {2: 0.07733666552352463, 3: 0.24386277528989792, 4: 0.357601118373155, 5: 0.24386277528989792, 6: 0.07733666552352463}
convolution: step 6, image 5: {3: 0.07733666552352463, 4: 0.24386277528989792, 5: 0.357601118373155, 6: 0.24386277528989792, 7: 0.07733666552352463}
convolution: step 6, image 6: {4: 0.07733666552352463, 5: 0.24386277528989792, 6: 0.357601118373155, 7: 0.24386277528989792, 8: 0.07733666552352463}
convolution: step 6, image 7: {5: 0.07733666552352463, 6: 0.24386277528989792, 7: 0.357601118373155, 8: 0.24386277528989792, 9: 0.07733666552352463}
convolution: step 6, image 8: {6: 0.08381894308979548, 7: 0.26430309537364144, 8: 0.3875748661629217, 9: 0.26430309537364144}
convolution: step 6, image 9: {7: 0.11393135211349699, 8: 0.35925541308057307, 9: 0.5268132348059299}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 7, image 0: {0: 0.5740969929676946, 1: 0.3482074278837349, 2: 0.0776955791485706}
convolution: step 7, image 1: {0: 0.25827437283171767, 1: 0.4258224521643882, 2: 0.25827437283171767, 3: 0.05762880217217644}
convolution: step 7, image 2: {0: 0.05448868454964294, 1: 0.24420134200323332, 2: 0.4026199468942474, 3: 0.24420134200323332, 4: 0.05448868454964294}
convolution: step 7, image 3: {1: 0.05448868454964294, 2: 0.24420134200323332, 3: 0.4026199468942474, 4: 0.24420134200323332, 5: 0.05448868454964294}
convolution: step 7, image 4: {2: 0.05448868454964294, 3: 0.24420134200323332, 4: 0.4026199468942474, 5: 0.24420134200323332, 6: 0.05448868454964294}
convolution: step 7, image 5: {3: 0.05448868454964294, 4: 0.24420134200323332, 5: 0.4026199468942474, 6: 0.24420134200323332, 7: 0.05448868454964294}
convolution: step 7, image 6: {4: 0.05448868454964294, 5: 0.24420134200323332, 6: 0.4026199468942474, 7: 0.24420134200323332, 8: 0.05448868454964294}
convolution: step 7, image 7: {5: 0.05448868454964294, 6: 0.24420134200323332, 7: 0.4026199468942474, 8: 0.24420134200323332, 9: 0.05448868454964294}
convolution: step 7, image 8: {6: 0.05762880217217644, 7: 0.25827437283171767, 8: 0.4258224521643882, 9: 0.25827437283171767}
convolution: step 7, image 9: {7: 0.0776955791485706, 8: 0.3482074278837349, 9: 0.5740969929676946}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 8, image 0: {0: 0.6361063592806936, 1: 0.32208330568016824, 2: 0.0418103350391381}
convolution: step 8, image 1: {0: 0.24361801128293276, 1: 0.48113939306830433, 2: 0.24361801128293276, 3: 0.03162458436583016}
convolution: step 8, image 2: {0: 0.030655128663176164, 1: 0.23614986980238736, 2: 0.46639000306887296, 3: 0.23614986980238736, 4: 0.030655128663176164}
convolution: step 8, image 3: {1: 0.030655128663176164, 2: 0.23614986980238736, 3: 0.46639000306887296, 4: 0.23614986980238736, 5: 0.030655128663176164}
convolution: step 8, image 4: {2: 0.030655128663176164, 3: 0.23614986980238736, 4: 0.46639000306887296, 5: 0.23614986980238736, 6: 0.030655128663176164}
convolution: step 8, image 5: {3: 0.030655128663176164, 4: 0.23614986980238736, 5: 0.46639000306887296, 6: 0.23614986980238736, 7: 0.030655128663176164}
convolution: step 8, image 6: {4: 0.030655128663176164, 5: 0.23614986980238736, 6: 0.46639000306887296, 7: 0.23614986980238736, 8: 0.030655128663176164}
convolution: step 8, image 7: {5: 0.030655128663176164, 6: 0.23614986980238736, 7: 0.46639000306887296, 8: 0.23614986980238736, 9: 0.030655128663176164}
convolution: step 8, image 8: {6: 0.03162458436583016, 7: 0.24361801128293276, 8: 0.48113939306830433, 9: 0.24361801128293276}
convolution: step 8, image 9: {7: 0.0418103350391381, 8: 0.32208330568016824, 9: 0.6361063592806936}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 9, image 0: {0: 0.7167676792469991, 1: 0.2690108653193587, 2: 0.014221455433642111}
convolution: step 9, image 1: {0: 0.2119846824571195, 1: 0.5648239103662975, 2: 0.2119846824571195, 3: 0.01120672471946341}
convolution: step 9, image 2: {0: 0.011082525902478017, 1: 0.20963535672285988, 2: 0.5585642347493242, 3: 0.20963535672285988, 4: 0.011082525902478017}
convolution: step 9, image 3: {1: 0.011082525902478017, 2: 0.20963535672285988, 3: 0.5585642347493242, 4: 0.20963535672285988, 5: 0.011082525902478017}
convolution: step 9, image 4: {2: 0.011082525902478017, 3: 0.20963535672285988, 4: 0.5585642347493242, 5: 0.20963535672285988, 6: 0.011082525902478017}
convolution: step 9, image 5: {3: 0.011082525902478017, 4: 0.20963535672285988, 5: 0.5585642347493242, 6: 0.20963535672285988, 7: 0.011082525902478017}
convolution: step 9, image 6: {4: 0.011082525902478017, 5: 0.20963535672285988, 6: 0.5585642347493242, 7: 0.20963535672285988, 8: 0.011082525902478017}
convolution: step 9, image 7: {5: 0.011082525902478017, 6: 0.20963535672285988, 7: 0.5585642347493242, 8: 0.20963535672285988, 9: 0.011082525902478017}
convolution: step 9, image 8: {6: 0.01120672471946341, 7: 0.2119846824571195, 8: 0.5648239103662975, 9: 0.2119846824571195}
convolution: step 9, image 9: {7: 0.014221455433642111, 8: 0.2690108653193587, 9: 0.7167676792469991}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 10, image 0: {0: 0.8207130523101699, 1: 0.17749164517732488, 2: 0.0017953025125052608}
convolution: step 10, image 1: {0: 0.15073707393532754, 1: 0.6970011682644035, 2: 0.15073707393532754, 3: 0.001524683864941476}
convolution: step 10, image 2: {0: 0.0015223627430305893, 1: 0.15050759742997494, 2: 0.695940079653989, 3: 0.15050759742997494, 4: 0.0015223627430305893}
convolution: step 10, image 3: {1: 0.0015223627430305893, 2: 0.15050759742997494, 3: 0.695940079653989, 4: 0.15050759742997494, 5: 0.0015223627430305893}
convolution: step 10, image 4: {2: 0.0015223627430305893, 3: 0.15050759742997494, 4: 0.695940079653989, 5: 0.15050759742997494, 6: 0.0015223627430305893}
convolution: step 10, image 5: {3: 0.0015223627430305893, 4: 0.15050759742997494, 5: 0.695940079653989, 6: 0.15050759742997494, 7: 0.0015223627430305893}
convolution: step 10, image 6: {4: 0.0015223627430305893, 5: 0.15050759742997494, 6: 0.695940079653989, 7: 0.15050759742997494, 8: 0.0015223627430305893}
convolution: step 10, image 7: {5: 0.0015223627430305893, 6: 0.15050759742997494, 7: 0.695940079653989, 8: 0.15050759742997494, 9: 0.0015223627430305893}
convolution: step 10, image 8: {6: 0.001524683864941476, 7: 0.15073707393532754, 8: 0.6970011682644035, 9: 0.15073707393532754}
convolution: step 10, image 9: {7: 0.0017953025125052608, 8: 0.17749164517732488, 9: 0.8207130523101699}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 11, image 0: {0: 0.9383088282923016, 1: 0.06167365867155375, 2: 1.7513036144605368e-05}
convolution: step 11, image 1: {0: 0.05809097566640627, 1: 0.8838015529803992, 2: 0.05809097566640627, 3: 1.64956867880842e-05}
convolution: step 11, image 2: {0: 1.6495414684890126e-05, 1: 0.05809001743167321, 2: 0.8837869743072838, 3: 0.05809001743167321, 4: 1.6495414684890126e-05}
convolution: step 11, image 3: {1: 1.6495414684890126e-05, 2: 0.05809001743167321, 3: 0.8837869743072838, 4: 0.05809001743167321, 5: 1.6495414684890126e-05}
convolution: step 11, image 4: {2: 1.6495414684890126e-05, 3: 0.05809001743167321, 4: 0.8837869743072838, 5: 0.05809001743167321, 6: 1.6495414684890126e-05}
convolution: step 11, image 5: {3: 1.6495414684890126e-05, 4: 0.05809001743167321, 5: 0.8837869743072838, 6: 0.05809001743167321, 7: 1.6495414684890126e-05}
convolution: step 11, image 6: {4: 1.6495414684890126e-05, 5: 0.05809001743167321, 6: 0.8837869743072838, 7: 0.05809001743167321, 8: 1.6495414684890126e-05}
convolution: step 11, image 7: {5: 1.6495414684890126e-05, 6: 0.05809001743167321, 7: 0.8837869743072838, 8: 0.05809001743167321, 9: 1.6495414684890126e-05}
convolution: step 11, image 8: {6: 1.6495686788084208e-05, 7: 0.05809097566640628, 8: 0.8838015529803994, 9: 0.05809097566640628}
convolution: step 11, image 9: {7: 1.751303614460537e-05, 8: 0.06167365867155376, 9: 0.9383088282923018}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 12, image 0: {0: 0.9978172835318574, 1: 0.0021827164452953196, 2: 2.2847370036903145e-11}
convolution: step 12, image 1: {0: 0.002177962570575287, 1: 0.9956440748360518, 2: 0.002177962570575287, 3: 2.2797609320126685e-11}
convolution: step 12, image 2: {0: 2.2797609319606957e-11, 1: 0.002177962570525635, 2: 0.9956440748133536, 3: 0.002177962570525635, 4: 2.2797609319606957e-11}
convolution: step 12, image 3: {1: 2.2797609319606957e-11, 2: 0.002177962570525635, 3: 0.9956440748133536, 4: 0.002177962570525635, 5: 2.2797609319606957e-11}
convolution: step 12, image 4: {2: 2.2797609319606957e-11, 3: 0.002177962570525635, 4: 0.9956440748133536, 5: 0.002177962570525635, 6: 2.2797609319606957e-11}
convolution: step 12, image 5: {3: 2.2797609319606957e-11, 4: 0.002177962570525635, 5: 0.9956440748133536, 6: 0.002177962570525635, 7: 2.2797609319606957e-11}
convolution: step 12, image 6: {4: 2.2797609319606957e-11, 5: 0.002177962570525635, 6: 0.9956440748133536, 7: 0.002177962570525635, 8: 2.2797609319606957e-11}
convolution: step 12, image 7: {5: 2.2797609319606957e-11, 6: 0.002177962570525635, 7: 0.9956440748133536, 8: 0.002177962570525635, 9: 2.2797609319606957e-11}
convolution: step 12, image 8: {6: 2.2797609320126685e-11, 7: 0.002177962570575287, 8: 0.9956440748360518, 9: 0.002177962570575287}
convolution: step 12, image 9: {7: 2.2847370036903145e-11, 8: 0.0021827164452953196, 9: 0.9978172835318574}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 13, image 0: {0: 0.9999999999771028, 1: 2.2897348455930755e-11, 2: 2.748785007847041e-43}
convolution: step 13, image 1: {0: 2.289734845540647e-11, 1: 0.9999999999542055, 2: 2.289734845540647e-11, 3: 2.7487850077841012e-43}
convolution: step 13, image 2: {0: 2.7487850077841012e-43, 1: 2.289734845540647e-11, 2: 0.9999999999542055, 3: 2.289734845540647e-11, 4: 2.7487850077841012e-43}
convolution: step 13, image 3: {1: 2.7487850077841012e-43, 2: 2.289734845540647e-11, 3: 0.9999999999542055, 4: 2.289734845540647e-11, 5: 2.7487850077841012e-43}
convolution: step 13, image 4: {2: 2.7487850077841012e-43, 3: 2.289734845540647e-11, 4: 0.9999999999542055, 5: 2.289734845540647e-11, 6: 2.7487850077841012e-43}
convolution: step 13, image 5: {3: 2.7487850077841012e-43, 4: 2.289734845540647e-11, 5: 0.9999999999542055, 6: 2.289734845540647e-11, 7: 2.7487850077841012e-43}
convolution: step 13, image 6: {4: 2.7487850077841012e-43, 5: 2.289734845540647e-11, 6: 0.9999999999542055, 7: 2.289734845540647e-11, 8: 2.7487850077841012e-43}
convolution: step 13, image 7: {5: 2.7487850077841012e-43, 6: 2.289734845540647e-11, 7: 0.9999999999542055, 8: 2.289734845540647e-11, 9: 2.7487850077841012e-43}
convolution: step 13, image 8: {6: 2.7487850077841012e-43, 7: 2.289734845540647e-11, 8: 0.9999999999542055, 9: 2.289734845540647e-11}
convolution: step 13, image 9: {7: 2.748785007847041e-43, 8: 2.2897348455930755e-11, 9: 0.9999999999771028}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 14, image 0: {0: 1.0, 1: 0.0, 2: 0.0}
convolution: step 14, image 1: {0: 0.0, 1: 1.0, 2: 0.0, 3: 0.0}
convolution: step 14, image 2: {0: 0.0, 1: 0.0, 2: 1.0, 3: 0.0, 4: 0.0}
convolution: step 14, image 3: {1: 0.0, 2: 0.0, 3: 1.0, 4: 0.0, 5: 0.0}
convolution: step 14, image 4: {2: 0.0, 3: 0.0, 4: 1.0, 5: 0.0, 6: 0.0}
convolution: step 14, image 5: {3: 0.0, 4: 0.0, 5: 1.0, 6: 0.0, 7: 0.0}
convolution: step 14, image 6: {4: 0.0, 5: 0.0, 6: 1.0, 7: 0.0, 8: 0.0}
convolution: step 14, image 7: {5: 0.0, 6: 0.0, 7: 1.0, 8: 0.0, 9: 0.0}
convolution: step 14, image 8: {6: 0.0, 7: 0.0, 8: 1.0, 9: 0.0}
convolution: step 14, image 9: {7: 0.0, 8: 0.0, 9: 1.0}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [05:09<00:00, 18.81s/it]100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [05:09<00:00, 15.49s/it]
Requested to load AutoencoderKL
Loading 1 new model
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Prompt executed in 341.66 seconds
gc collect
got prompt
Requested to load BaseModel
Loading 1 new model
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 0, image 0: {0: 0.4017633292405399, 1: 0.3545548936268515, 2: 0.24368177713260863}
convolution: step 0, image 1: {0: 0.2617501108999154, 1: 0.29660173325630934, 2: 0.2617501108999154, 3: 0.17989804494385983}
convolution: step 0, image 2: {0: 0.15246914402033734, 1: 0.22184129554377693, 2: 0.25137912087177144, 3: 0.22184129554377693, 4: 0.15246914402033734}
convolution: step 0, image 3: {1: 0.15246914402033734, 2: 0.22184129554377693, 3: 0.25137912087177144, 4: 0.22184129554377693, 5: 0.15246914402033734}
convolution: step 0, image 4: {2: 0.15246914402033734, 3: 0.22184129554377693, 4: 0.25137912087177144, 5: 0.22184129554377693, 6: 0.15246914402033734}
convolution: step 0, image 5: {3: 0.15246914402033734, 4: 0.22184129554377693, 5: 0.25137912087177144, 6: 0.22184129554377693, 7: 0.15246914402033734}
convolution: step 0, image 6: {4: 0.15246914402033734, 5: 0.22184129554377693, 6: 0.25137912087177144, 7: 0.22184129554377693, 8: 0.15246914402033734}
convolution: step 0, image 7: {5: 0.15246914402033734, 6: 0.22184129554377693, 7: 0.25137912087177144, 8: 0.22184129554377693, 9: 0.15246914402033734}
convolution: step 0, image 8: {6: 0.17989804494385983, 7: 0.2617501108999154, 8: 0.29660173325630934, 9: 0.2617501108999154}
convolution: step 0, image 9: {7: 0.24368177713260863, 8: 0.3545548936268515, 9: 0.4017633292405399}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 1, image 0: {0: 0.41236900559919, 1: 0.3567189364897765, 2: 0.2309120579110335}
convolution: step 1, image 1: {0: 0.2629276609145822, 1: 0.30394578752332274, 2: 0.2629276609145822, 3: 0.17019889064751292}
convolution: step 1, image 2: {0: 0.14544441291799193, 1: 0.22468630163295994, 2: 0.2597385708980964, 3: 0.22468630163295994, 4: 0.14544441291799193}
convolution: step 1, image 3: {1: 0.14544441291799193, 2: 0.22468630163295994, 3: 0.2597385708980964, 4: 0.22468630163295994, 5: 0.14544441291799193}
convolution: step 1, image 4: {2: 0.14544441291799193, 3: 0.22468630163295994, 4: 0.2597385708980964, 5: 0.22468630163295994, 6: 0.14544441291799193}
convolution: step 1, image 5: {3: 0.14544441291799193, 4: 0.22468630163295994, 5: 0.2597385708980964, 6: 0.22468630163295994, 7: 0.14544441291799193}
convolution: step 1, image 6: {4: 0.14544441291799193, 5: 0.22468630163295994, 6: 0.2597385708980964, 7: 0.22468630163295994, 8: 0.14544441291799193}
convolution: step 1, image 7: {5: 0.14544441291799193, 6: 0.22468630163295994, 7: 0.2597385708980964, 8: 0.22468630163295994, 9: 0.14544441291799193}
convolution: step 1, image 8: {6: 0.17019889064751292, 7: 0.2629276609145822, 8: 0.30394578752332274, 9: 0.2629276609145822}
convolution: step 1, image 9: {7: 0.2309120579110335, 8: 0.3567189364897765, 9: 0.41236900559919}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 2, image 0: {0: 0.4255530538862166, 1: 0.3589742781578235, 2: 0.2154726679559599}
convolution: step 2, image 1: {0: 0.2641508996361845, 1: 0.3131428318592468, 2: 0.2641508996361845, 3: 0.15855536886838423}
convolution: step 2, image 2: {0: 0.13685609952613034, 1: 0.228000237825658, 2: 0.27028732529642346, 3: 0.228000237825658, 4: 0.13685609952613034}
convolution: step 2, image 3: {1: 0.13685609952613034, 2: 0.228000237825658, 3: 0.27028732529642346, 4: 0.228000237825658, 5: 0.13685609952613034}
convolution: step 2, image 4: {2: 0.13685609952613034, 3: 0.228000237825658, 4: 0.27028732529642346, 5: 0.228000237825658, 6: 0.13685609952613034}
convolution: step 2, image 5: {3: 0.13685609952613034, 4: 0.228000237825658, 5: 0.27028732529642346, 6: 0.228000237825658, 7: 0.13685609952613034}
convolution: step 2, image 6: {4: 0.13685609952613034, 5: 0.228000237825658, 6: 0.27028732529642346, 7: 0.228000237825658, 8: 0.13685609952613034}
convolution: step 2, image 7: {5: 0.13685609952613034, 6: 0.228000237825658, 7: 0.27028732529642346, 8: 0.228000237825658, 9: 0.13685609952613034}
convolution: step 2, image 8: {6: 0.15855536886838423, 7: 0.2641508996361845, 8: 0.3131428318592468, 9: 0.2641508996361845}
convolution: step 2, image 9: {7: 0.2154726679559599, 8: 0.3589742781578235, 9: 0.4255530538862166}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 3, image 0: {0: 0.44216519305557406, 1: 0.36111779727830834, 2: 0.19671700966611744}
convolution: step 3, image 1: {0: 0.2653097314577766, 1: 0.3248544644260238, 2: 0.2653097314577766, 3: 0.144526072658423}
convolution: step 3, image 2: {0: 0.1262759111487327, 1: 0.2318075033813203, 2: 0.28383317093989413, 3: 0.2318075033813203, 4: 0.1262759111487327}
convolution: step 3, image 3: {1: 0.1262759111487327, 2: 0.2318075033813203, 3: 0.28383317093989413, 4: 0.2318075033813203, 5: 0.1262759111487327}
convolution: step 3, image 4: {2: 0.1262759111487327, 3: 0.2318075033813203, 4: 0.28383317093989413, 5: 0.2318075033813203, 6: 0.1262759111487327}
convolution: step 3, image 5: {3: 0.1262759111487327, 4: 0.2318075033813203, 5: 0.28383317093989413, 6: 0.2318075033813203, 7: 0.1262759111487327}
convolution: step 3, image 6: {4: 0.1262759111487327, 5: 0.2318075033813203, 6: 0.28383317093989413, 7: 0.2318075033813203, 8: 0.1262759111487327}
convolution: step 3, image 7: {5: 0.1262759111487327, 6: 0.2318075033813203, 7: 0.28383317093989413, 8: 0.2318075033813203, 9: 0.1262759111487327}
convolution: step 3, image 8: {6: 0.14452607265842302, 7: 0.2653097314577766, 8: 0.32485446442602384, 9: 0.2653097314577766}
convolution: step 3, image 9: {7: 0.1967170096661175, 8: 0.36111779727830845, 9: 0.44216519305557417}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 4, image 0: {0: 0.46338867189440147, 1: 0.36269641646162004, 2: 0.17391491164397846}
convolution: step 4, image 1: {0: 0.26616083529697554, 1: 0.34005275591583145, 2: 0.26616083529697554, 3: 0.12762557349021747}
convolution: step 4, image 2: {0: 0.11318080796553046, 1: 0.23603653690928336, 2: 0.3015653102503723, 3: 0.23603653690928336, 4: 0.11318080796553046}
convolution: step 4, image 3: {1: 0.11318080796553046, 2: 0.23603653690928336, 3: 0.3015653102503723, 4: 0.23603653690928336, 5: 0.11318080796553046}
convolution: step 4, image 4: {2: 0.11318080796553046, 3: 0.23603653690928336, 4: 0.3015653102503723, 5: 0.23603653690928336, 6: 0.11318080796553046}
convolution: step 4, image 5: {3: 0.11318080796553046, 4: 0.23603653690928336, 5: 0.3015653102503723, 6: 0.23603653690928336, 7: 0.11318080796553046}
convolution: step 4, image 6: {4: 0.11318080796553046, 5: 0.23603653690928336, 6: 0.3015653102503723, 7: 0.23603653690928336, 8: 0.11318080796553046}
convolution: step 4, image 7: {5: 0.11318080796553046, 6: 0.23603653690928336, 7: 0.3015653102503723, 8: 0.23603653690928336, 9: 0.11318080796553046}
convolution: step 4, image 8: {6: 0.12762557349021747, 7: 0.26616083529697554, 8: 0.34005275591583145, 9: 0.26616083529697554}
convolution: step 4, image 9: {7: 0.17391491164397846, 8: 0.36269641646162004, 9: 0.46338867189440147}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 5, image 0: {0: 0.49086370300520654, 1: 0.36274400418077, 2: 0.1463922928140235}
convolution: step 5, image 1: {0: 0.26618646133676294, 1: 0.36020243090359083, 2: 0.26618646133676294, 3: 0.10742464642288334}
convolution: step 5, image 2: {0: 0.0970040234971093, 1: 0.2403653035866392, 2: 0.32526134583250305, 3: 0.2403653035866392, 4: 0.0970040234971093}
convolution: step 5, image 3: {1: 0.0970040234971093, 2: 0.2403653035866392, 3: 0.32526134583250305, 4: 0.2403653035866392, 5: 0.0970040234971093}
convolution: step 5, image 4: {2: 0.0970040234971093, 3: 0.2403653035866392, 4: 0.32526134583250305, 5: 0.2403653035866392, 6: 0.0970040234971093}
convolution: step 5, image 5: {3: 0.0970040234971093, 4: 0.2403653035866392, 5: 0.32526134583250305, 6: 0.2403653035866392, 7: 0.0970040234971093}
convolution: step 5, image 6: {4: 0.0970040234971093, 5: 0.2403653035866392, 6: 0.32526134583250305, 7: 0.2403653035866392, 8: 0.0970040234971093}
convolution: step 5, image 7: {5: 0.0970040234971093, 6: 0.2403653035866392, 7: 0.32526134583250305, 8: 0.2403653035866392, 9: 0.0970040234971093}
convolution: step 5, image 8: {6: 0.10742464642288334, 7: 0.26618646133676294, 8: 0.36020243090359083, 9: 0.26618646133676294}
convolution: step 5, image 9: {7: 0.1463922928140235, 8: 0.36274400418077, 9: 0.49086370300520654}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 6, image 0: {0: 0.5268132348059299, 1: 0.35925541308057307, 2: 0.11393135211349699}
convolution: step 6, image 1: {0: 0.26430309537364144, 1: 0.3875748661629217, 2: 0.26430309537364144, 3: 0.08381894308979548}
convolution: step 6, image 2: {0: 0.07733666552352463, 1: 0.24386277528989792, 2: 0.357601118373155, 3: 0.24386277528989792, 4: 0.07733666552352463}
convolution: step 6, image 3: {1: 0.07733666552352463, 2: 0.24386277528989792, 3: 0.357601118373155, 4: 0.24386277528989792, 5: 0.07733666552352463}
convolution: step 6, image 4: {2: 0.07733666552352463, 3: 0.24386277528989792, 4: 0.357601118373155, 5: 0.24386277528989792, 6: 0.07733666552352463}
convolution: step 6, image 5: {3: 0.07733666552352463, 4: 0.24386277528989792, 5: 0.357601118373155, 6: 0.24386277528989792, 7: 0.07733666552352463}
convolution: step 6, image 6: {4: 0.07733666552352463, 5: 0.24386277528989792, 6: 0.357601118373155, 7: 0.24386277528989792, 8: 0.07733666552352463}
convolution: step 6, image 7: {5: 0.07733666552352463, 6: 0.24386277528989792, 7: 0.357601118373155, 8: 0.24386277528989792, 9: 0.07733666552352463}
convolution: step 6, image 8: {6: 0.08381894308979548, 7: 0.26430309537364144, 8: 0.3875748661629217, 9: 0.26430309537364144}
convolution: step 6, image 9: {7: 0.11393135211349699, 8: 0.35925541308057307, 9: 0.5268132348059299}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 7, image 0: {0: 0.5740969929676946, 1: 0.3482074278837349, 2: 0.0776955791485706}
convolution: step 7, image 1: {0: 0.25827437283171767, 1: 0.4258224521643882, 2: 0.25827437283171767, 3: 0.05762880217217644}
convolution: step 7, image 2: {0: 0.05448868454964294, 1: 0.24420134200323332, 2: 0.4026199468942474, 3: 0.24420134200323332, 4: 0.05448868454964294}
convolution: step 7, image 3: {1: 0.05448868454964294, 2: 0.24420134200323332, 3: 0.4026199468942474, 4: 0.24420134200323332, 5: 0.05448868454964294}
convolution: step 7, image 4: {2: 0.05448868454964294, 3: 0.24420134200323332, 4: 0.4026199468942474, 5: 0.24420134200323332, 6: 0.05448868454964294}
convolution: step 7, image 5: {3: 0.05448868454964294, 4: 0.24420134200323332, 5: 0.4026199468942474, 6: 0.24420134200323332, 7: 0.05448868454964294}
convolution: step 7, image 6: {4: 0.05448868454964294, 5: 0.24420134200323332, 6: 0.4026199468942474, 7: 0.24420134200323332, 8: 0.05448868454964294}
convolution: step 7, image 7: {5: 0.05448868454964294, 6: 0.24420134200323332, 7: 0.4026199468942474, 8: 0.24420134200323332, 9: 0.05448868454964294}
convolution: step 7, image 8: {6: 0.05762880217217644, 7: 0.25827437283171767, 8: 0.4258224521643882, 9: 0.25827437283171767}
convolution: step 7, image 9: {7: 0.0776955791485706, 8: 0.3482074278837349, 9: 0.5740969929676946}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 8, image 0: {0: 0.6361063592806936, 1: 0.32208330568016824, 2: 0.0418103350391381}
convolution: step 8, image 1: {0: 0.24361801128293276, 1: 0.48113939306830433, 2: 0.24361801128293276, 3: 0.03162458436583016}
convolution: step 8, image 2: {0: 0.030655128663176164, 1: 0.23614986980238736, 2: 0.46639000306887296, 3: 0.23614986980238736, 4: 0.030655128663176164}
convolution: step 8, image 3: {1: 0.030655128663176164, 2: 0.23614986980238736, 3: 0.46639000306887296, 4: 0.23614986980238736, 5: 0.030655128663176164}
convolution: step 8, image 4: {2: 0.030655128663176164, 3: 0.23614986980238736, 4: 0.46639000306887296, 5: 0.23614986980238736, 6: 0.030655128663176164}
convolution: step 8, image 5: {3: 0.030655128663176164, 4: 0.23614986980238736, 5: 0.46639000306887296, 6: 0.23614986980238736, 7: 0.030655128663176164}
convolution: step 8, image 6: {4: 0.030655128663176164, 5: 0.23614986980238736, 6: 0.46639000306887296, 7: 0.23614986980238736, 8: 0.030655128663176164}
convolution: step 8, image 7: {5: 0.030655128663176164, 6: 0.23614986980238736, 7: 0.46639000306887296, 8: 0.23614986980238736, 9: 0.030655128663176164}
convolution: step 8, image 8: {6: 0.03162458436583016, 7: 0.24361801128293276, 8: 0.48113939306830433, 9: 0.24361801128293276}
convolution: step 8, image 9: {7: 0.0418103350391381, 8: 0.32208330568016824, 9: 0.6361063592806936}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 9, image 0: {0: 0.7167676792469991, 1: 0.2690108653193587, 2: 0.014221455433642111}
convolution: step 9, image 1: {0: 0.2119846824571195, 1: 0.5648239103662975, 2: 0.2119846824571195, 3: 0.01120672471946341}
convolution: step 9, image 2: {0: 0.011082525902478017, 1: 0.20963535672285988, 2: 0.5585642347493242, 3: 0.20963535672285988, 4: 0.011082525902478017}
convolution: step 9, image 3: {1: 0.011082525902478017, 2: 0.20963535672285988, 3: 0.5585642347493242, 4: 0.20963535672285988, 5: 0.011082525902478017}
convolution: step 9, image 4: {2: 0.011082525902478017, 3: 0.20963535672285988, 4: 0.5585642347493242, 5: 0.20963535672285988, 6: 0.011082525902478017}
convolution: step 9, image 5: {3: 0.011082525902478017, 4: 0.20963535672285988, 5: 0.5585642347493242, 6: 0.20963535672285988, 7: 0.011082525902478017}
convolution: step 9, image 6: {4: 0.011082525902478017, 5: 0.20963535672285988, 6: 0.5585642347493242, 7: 0.20963535672285988, 8: 0.011082525902478017}
convolution: step 9, image 7: {5: 0.011082525902478017, 6: 0.20963535672285988, 7: 0.5585642347493242, 8: 0.20963535672285988, 9: 0.011082525902478017}
convolution: step 9, image 8: {6: 0.01120672471946341, 7: 0.2119846824571195, 8: 0.5648239103662975, 9: 0.2119846824571195}
convolution: step 9, image 9: {7: 0.014221455433642111, 8: 0.2690108653193587, 9: 0.7167676792469991}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 10, image 0: {0: 0.8207130523101699, 1: 0.17749164517732488, 2: 0.0017953025125052608}
convolution: step 10, image 1: {0: 0.15073707393532754, 1: 0.6970011682644035, 2: 0.15073707393532754, 3: 0.001524683864941476}
convolution: step 10, image 2: {0: 0.0015223627430305893, 1: 0.15050759742997494, 2: 0.695940079653989, 3: 0.15050759742997494, 4: 0.0015223627430305893}
convolution: step 10, image 3: {1: 0.0015223627430305893, 2: 0.15050759742997494, 3: 0.695940079653989, 4: 0.15050759742997494, 5: 0.0015223627430305893}
convolution: step 10, image 4: {2: 0.0015223627430305893, 3: 0.15050759742997494, 4: 0.695940079653989, 5: 0.15050759742997494, 6: 0.0015223627430305893}
convolution: step 10, image 5: {3: 0.0015223627430305893, 4: 0.15050759742997494, 5: 0.695940079653989, 6: 0.15050759742997494, 7: 0.0015223627430305893}
convolution: step 10, image 6: {4: 0.0015223627430305893, 5: 0.15050759742997494, 6: 0.695940079653989, 7: 0.15050759742997494, 8: 0.0015223627430305893}
convolution: step 10, image 7: {5: 0.0015223627430305893, 6: 0.15050759742997494, 7: 0.695940079653989, 8: 0.15050759742997494, 9: 0.0015223627430305893}
convolution: step 10, image 8: {6: 0.001524683864941476, 7: 0.15073707393532754, 8: 0.6970011682644035, 9: 0.15073707393532754}
convolution: step 10, image 9: {7: 0.0017953025125052608, 8: 0.17749164517732488, 9: 0.8207130523101699}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 11, image 0: {0: 0.9383088282923016, 1: 0.06167365867155375, 2: 1.7513036144605368e-05}
convolution: step 11, image 1: {0: 0.05809097566640627, 1: 0.8838015529803992, 2: 0.05809097566640627, 3: 1.64956867880842e-05}
convolution: step 11, image 2: {0: 1.6495414684890126e-05, 1: 0.05809001743167321, 2: 0.8837869743072838, 3: 0.05809001743167321, 4: 1.6495414684890126e-05}
convolution: step 11, image 3: {1: 1.6495414684890126e-05, 2: 0.05809001743167321, 3: 0.8837869743072838, 4: 0.05809001743167321, 5: 1.6495414684890126e-05}
convolution: step 11, image 4: {2: 1.6495414684890126e-05, 3: 0.05809001743167321, 4: 0.8837869743072838, 5: 0.05809001743167321, 6: 1.6495414684890126e-05}
convolution: step 11, image 5: {3: 1.6495414684890126e-05, 4: 0.05809001743167321, 5: 0.8837869743072838, 6: 0.05809001743167321, 7: 1.6495414684890126e-05}
convolution: step 11, image 6: {4: 1.6495414684890126e-05, 5: 0.05809001743167321, 6: 0.8837869743072838, 7: 0.05809001743167321, 8: 1.6495414684890126e-05}
convolution: step 11, image 7: {5: 1.6495414684890126e-05, 6: 0.05809001743167321, 7: 0.8837869743072838, 8: 0.05809001743167321, 9: 1.6495414684890126e-05}
convolution: step 11, image 8: {6: 1.6495686788084208e-05, 7: 0.05809097566640628, 8: 0.8838015529803994, 9: 0.05809097566640628}
convolution: step 11, image 9: {7: 1.751303614460537e-05, 8: 0.06167365867155376, 9: 0.9383088282923018}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 12, image 0: {0: 0.9978172835318574, 1: 0.0021827164452953196, 2: 2.2847370036903145e-11}
convolution: step 12, image 1: {0: 0.002177962570575287, 1: 0.9956440748360518, 2: 0.002177962570575287, 3: 2.2797609320126685e-11}
convolution: step 12, image 2: {0: 2.2797609319606957e-11, 1: 0.002177962570525635, 2: 0.9956440748133536, 3: 0.002177962570525635, 4: 2.2797609319606957e-11}
convolution: step 12, image 3: {1: 2.2797609319606957e-11, 2: 0.002177962570525635, 3: 0.9956440748133536, 4: 0.002177962570525635, 5: 2.2797609319606957e-11}
convolution: step 12, image 4: {2: 2.2797609319606957e-11, 3: 0.002177962570525635, 4: 0.9956440748133536, 5: 0.002177962570525635, 6: 2.2797609319606957e-11}
convolution: step 12, image 5: {3: 2.2797609319606957e-11, 4: 0.002177962570525635, 5: 0.9956440748133536, 6: 0.002177962570525635, 7: 2.2797609319606957e-11}
convolution: step 12, image 6: {4: 2.2797609319606957e-11, 5: 0.002177962570525635, 6: 0.9956440748133536, 7: 0.002177962570525635, 8: 2.2797609319606957e-11}
convolution: step 12, image 7: {5: 2.2797609319606957e-11, 6: 0.002177962570525635, 7: 0.9956440748133536, 8: 0.002177962570525635, 9: 2.2797609319606957e-11}
convolution: step 12, image 8: {6: 2.2797609320126685e-11, 7: 0.002177962570575287, 8: 0.9956440748360518, 9: 0.002177962570575287}
convolution: step 12, image 9: {7: 2.2847370036903145e-11, 8: 0.0021827164452953196, 9: 0.9978172835318574}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 13, image 0: {0: 0.9999999999771028, 1: 2.2897348455930755e-11, 2: 2.748785007847041e-43}
convolution: step 13, image 1: {0: 2.289734845540647e-11, 1: 0.9999999999542055, 2: 2.289734845540647e-11, 3: 2.7487850077841012e-43}
convolution: step 13, image 2: {0: 2.7487850077841012e-43, 1: 2.289734845540647e-11, 2: 0.9999999999542055, 3: 2.289734845540647e-11, 4: 2.7487850077841012e-43}
convolution: step 13, image 3: {1: 2.7487850077841012e-43, 2: 2.289734845540647e-11, 3: 0.9999999999542055, 4: 2.289734845540647e-11, 5: 2.7487850077841012e-43}
convolution: step 13, image 4: {2: 2.7487850077841012e-43, 3: 2.289734845540647e-11, 4: 0.9999999999542055, 5: 2.289734845540647e-11, 6: 2.7487850077841012e-43}
convolution: step 13, image 5: {3: 2.7487850077841012e-43, 4: 2.289734845540647e-11, 5: 0.9999999999542055, 6: 2.289734845540647e-11, 7: 2.7487850077841012e-43}
convolution: step 13, image 6: {4: 2.7487850077841012e-43, 5: 2.289734845540647e-11, 6: 0.9999999999542055, 7: 2.289734845540647e-11, 8: 2.7487850077841012e-43}
convolution: step 13, image 7: {5: 2.7487850077841012e-43, 6: 2.289734845540647e-11, 7: 0.9999999999542055, 8: 2.289734845540647e-11, 9: 2.7487850077841012e-43}
convolution: step 13, image 8: {6: 2.7487850077841012e-43, 7: 2.289734845540647e-11, 8: 0.9999999999542055, 9: 2.289734845540647e-11}
convolution: step 13, image 9: {7: 2.748785007847041e-43, 8: 2.2897348455930755e-11, 9: 0.9999999999771028}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 14, image 0: {0: 1.0, 1: 0.0, 2: 0.0}
convolution: step 14, image 1: {0: 0.0, 1: 1.0, 2: 0.0, 3: 0.0}
convolution: step 14, image 2: {0: 0.0, 1: 0.0, 2: 1.0, 3: 0.0, 4: 0.0}
convolution: step 14, image 3: {1: 0.0, 2: 0.0, 3: 1.0, 4: 0.0, 5: 0.0}
convolution: step 14, image 4: {2: 0.0, 3: 0.0, 4: 1.0, 5: 0.0, 6: 0.0}
convolution: step 14, image 5: {3: 0.0, 4: 0.0, 5: 1.0, 6: 0.0, 7: 0.0}
convolution: step 14, image 6: {4: 0.0, 5: 0.0, 6: 1.0, 7: 0.0, 8: 0.0}
convolution: step 14, image 7: {5: 0.0, 6: 0.0, 7: 1.0, 8: 0.0, 9: 0.0}
convolution: step 14, image 8: {6: 0.0, 7: 0.0, 8: 1.0, 9: 0.0}
convolution: step 14, image 9: {7: 0.0, 8: 0.0, 9: 1.0}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:48<00:00,  6.43s/it]100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [03:48<00:00, 11.41s/it]
Requested to load AutoencoderKL
Loading 1 new model
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Prompt executed in 243.25 seconds
gc collect
got prompt
Requested to load SD1ClipModel
Loading 1 new model
Requested to load BaseModel
Loading 1 new model
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 0, image 0: {0: 0.4017633292405399, 1: 0.3545548936268515, 2: 0.24368177713260863}
convolution: step 0, image 1: {0: 0.2617501108999154, 1: 0.29660173325630934, 2: 0.2617501108999154, 3: 0.17989804494385983}
convolution: step 0, image 2: {0: 0.15246914402033734, 1: 0.22184129554377693, 2: 0.25137912087177144, 3: 0.22184129554377693, 4: 0.15246914402033734}
convolution: step 0, image 3: {1: 0.15246914402033734, 2: 0.22184129554377693, 3: 0.25137912087177144, 4: 0.22184129554377693, 5: 0.15246914402033734}
convolution: step 0, image 4: {2: 0.15246914402033734, 3: 0.22184129554377693, 4: 0.25137912087177144, 5: 0.22184129554377693, 6: 0.15246914402033734}
convolution: step 0, image 5: {3: 0.15246914402033734, 4: 0.22184129554377693, 5: 0.25137912087177144, 6: 0.22184129554377693, 7: 0.15246914402033734}
convolution: step 0, image 6: {4: 0.15246914402033734, 5: 0.22184129554377693, 6: 0.25137912087177144, 7: 0.22184129554377693, 8: 0.15246914402033734}
convolution: step 0, image 7: {5: 0.15246914402033734, 6: 0.22184129554377693, 7: 0.25137912087177144, 8: 0.22184129554377693, 9: 0.15246914402033734}
convolution: step 0, image 8: {6: 0.15246914402033734, 7: 0.22184129554377693, 8: 0.25137912087177144, 9: 0.22184129554377693, 10: 0.15246914402033734}
convolution: step 0, image 9: {7: 0.15246914402033734, 8: 0.22184129554377693, 9: 0.25137912087177144, 10: 0.22184129554377693, 11: 0.15246914402033734}
convolution: step 0, image 10: {8: 0.15246914402033734, 9: 0.22184129554377693, 10: 0.25137912087177144, 11: 0.22184129554377693, 12: 0.15246914402033734}
convolution: step 0, image 11: {9: 0.15246914402033734, 10: 0.22184129554377693, 11: 0.25137912087177144, 12: 0.22184129554377693, 13: 0.15246914402033734}
convolution: step 0, image 12: {10: 0.17989804494385983, 11: 0.2617501108999154, 12: 0.29660173325630934, 13: 0.2617501108999154}
convolution: step 0, image 13: {11: 0.24368177713260863, 12: 0.3545548936268515, 13: 0.4017633292405399}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 1, image 0: {0: 0.41236900559919, 1: 0.3567189364897765, 2: 0.2309120579110335}
convolution: step 1, image 1: {0: 0.2629276609145822, 1: 0.30394578752332274, 2: 0.2629276609145822, 3: 0.17019889064751292}
convolution: step 1, image 2: {0: 0.14544441291799193, 1: 0.22468630163295994, 2: 0.2597385708980964, 3: 0.22468630163295994, 4: 0.14544441291799193}
convolution: step 1, image 3: {1: 0.14544441291799193, 2: 0.22468630163295994, 3: 0.2597385708980964, 4: 0.22468630163295994, 5: 0.14544441291799193}
convolution: step 1, image 4: {2: 0.14544441291799193, 3: 0.22468630163295994, 4: 0.2597385708980964, 5: 0.22468630163295994, 6: 0.14544441291799193}
convolution: step 1, image 5: {3: 0.14544441291799193, 4: 0.22468630163295994, 5: 0.2597385708980964, 6: 0.22468630163295994, 7: 0.14544441291799193}
convolution: step 1, image 6: {4: 0.14544441291799193, 5: 0.22468630163295994, 6: 0.2597385708980964, 7: 0.22468630163295994, 8: 0.14544441291799193}
convolution: step 1, image 7: {5: 0.14544441291799193, 6: 0.22468630163295994, 7: 0.2597385708980964, 8: 0.22468630163295994, 9: 0.14544441291799193}
convolution: step 1, image 8: {6: 0.14544441291799193, 7: 0.22468630163295994, 8: 0.2597385708980964, 9: 0.22468630163295994, 10: 0.14544441291799193}
convolution: step 1, image 9: {7: 0.14544441291799193, 8: 0.22468630163295994, 9: 0.2597385708980964, 10: 0.22468630163295994, 11: 0.14544441291799193}
convolution: step 1, image 10: {8: 0.14544441291799193, 9: 0.22468630163295994, 10: 0.2597385708980964, 11: 0.22468630163295994, 12: 0.14544441291799193}
convolution: step 1, image 11: {9: 0.14544441291799193, 10: 0.22468630163295994, 11: 0.2597385708980964, 12: 0.22468630163295994, 13: 0.14544441291799193}
convolution: step 1, image 12: {10: 0.17019889064751292, 11: 0.2629276609145822, 12: 0.30394578752332274, 13: 0.2629276609145822}
convolution: step 1, image 13: {11: 0.2309120579110335, 12: 0.3567189364897765, 13: 0.41236900559919}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 2, image 0: {0: 0.4255530538862166, 1: 0.3589742781578235, 2: 0.2154726679559599}
convolution: step 2, image 1: {0: 0.2641508996361845, 1: 0.3131428318592468, 2: 0.2641508996361845, 3: 0.15855536886838423}
convolution: step 2, image 2: {0: 0.13685609952613034, 1: 0.228000237825658, 2: 0.27028732529642346, 3: 0.228000237825658, 4: 0.13685609952613034}
convolution: step 2, image 3: {1: 0.13685609952613034, 2: 0.228000237825658, 3: 0.27028732529642346, 4: 0.228000237825658, 5: 0.13685609952613034}
convolution: step 2, image 4: {2: 0.13685609952613034, 3: 0.228000237825658, 4: 0.27028732529642346, 5: 0.228000237825658, 6: 0.13685609952613034}
convolution: step 2, image 5: {3: 0.13685609952613034, 4: 0.228000237825658, 5: 0.27028732529642346, 6: 0.228000237825658, 7: 0.13685609952613034}
convolution: step 2, image 6: {4: 0.13685609952613034, 5: 0.228000237825658, 6: 0.27028732529642346, 7: 0.228000237825658, 8: 0.13685609952613034}
convolution: step 2, image 7: {5: 0.13685609952613034, 6: 0.228000237825658, 7: 0.27028732529642346, 8: 0.228000237825658, 9: 0.13685609952613034}
convolution: step 2, image 8: {6: 0.13685609952613034, 7: 0.228000237825658, 8: 0.27028732529642346, 9: 0.228000237825658, 10: 0.13685609952613034}
convolution: step 2, image 9: {7: 0.13685609952613034, 8: 0.228000237825658, 9: 0.27028732529642346, 10: 0.228000237825658, 11: 0.13685609952613034}
convolution: step 2, image 10: {8: 0.13685609952613034, 9: 0.228000237825658, 10: 0.27028732529642346, 11: 0.228000237825658, 12: 0.13685609952613034}
convolution: step 2, image 11: {9: 0.13685609952613034, 10: 0.228000237825658, 11: 0.27028732529642346, 12: 0.228000237825658, 13: 0.13685609952613034}
convolution: step 2, image 12: {10: 0.15855536886838423, 11: 0.2641508996361845, 12: 0.3131428318592468, 13: 0.2641508996361845}
convolution: step 2, image 13: {11: 0.2154726679559599, 12: 0.3589742781578235, 13: 0.4255530538862166}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 3, image 0: {0: 0.44216519305557406, 1: 0.36111779727830834, 2: 0.19671700966611744}
convolution: step 3, image 1: {0: 0.2653097314577766, 1: 0.3248544644260238, 2: 0.2653097314577766, 3: 0.144526072658423}
convolution: step 3, image 2: {0: 0.1262759111487327, 1: 0.2318075033813203, 2: 0.28383317093989413, 3: 0.2318075033813203, 4: 0.1262759111487327}
convolution: step 3, image 3: {1: 0.1262759111487327, 2: 0.2318075033813203, 3: 0.28383317093989413, 4: 0.2318075033813203, 5: 0.1262759111487327}
convolution: step 3, image 4: {2: 0.1262759111487327, 3: 0.2318075033813203, 4: 0.28383317093989413, 5: 0.2318075033813203, 6: 0.1262759111487327}
convolution: step 3, image 5: {3: 0.1262759111487327, 4: 0.2318075033813203, 5: 0.28383317093989413, 6: 0.2318075033813203, 7: 0.1262759111487327}
convolution: step 3, image 6: {4: 0.1262759111487327, 5: 0.2318075033813203, 6: 0.28383317093989413, 7: 0.2318075033813203, 8: 0.1262759111487327}
convolution: step 3, image 7: {5: 0.1262759111487327, 6: 0.2318075033813203, 7: 0.28383317093989413, 8: 0.2318075033813203, 9: 0.1262759111487327}
convolution: step 3, image 8: {6: 0.1262759111487327, 7: 0.2318075033813203, 8: 0.28383317093989413, 9: 0.2318075033813203, 10: 0.1262759111487327}
convolution: step 3, image 9: {7: 0.1262759111487327, 8: 0.2318075033813203, 9: 0.28383317093989413, 10: 0.2318075033813203, 11: 0.1262759111487327}
convolution: step 3, image 10: {8: 0.1262759111487327, 9: 0.2318075033813203, 10: 0.28383317093989413, 11: 0.2318075033813203, 12: 0.1262759111487327}
convolution: step 3, image 11: {9: 0.1262759111487327, 10: 0.2318075033813203, 11: 0.28383317093989413, 12: 0.2318075033813203, 13: 0.1262759111487327}
convolution: step 3, image 12: {10: 0.14452607265842302, 11: 0.2653097314577766, 12: 0.32485446442602384, 13: 0.2653097314577766}
convolution: step 3, image 13: {11: 0.1967170096661175, 12: 0.36111779727830845, 13: 0.44216519305557417}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 4, image 0: {0: 0.46338867189440147, 1: 0.36269641646162004, 2: 0.17391491164397846}
convolution: step 4, image 1: {0: 0.26616083529697554, 1: 0.34005275591583145, 2: 0.26616083529697554, 3: 0.12762557349021747}
convolution: step 4, image 2: {0: 0.11318080796553046, 1: 0.23603653690928336, 2: 0.3015653102503723, 3: 0.23603653690928336, 4: 0.11318080796553046}
convolution: step 4, image 3: {1: 0.11318080796553046, 2: 0.23603653690928336, 3: 0.3015653102503723, 4: 0.23603653690928336, 5: 0.11318080796553046}
convolution: step 4, image 4: {2: 0.11318080796553046, 3: 0.23603653690928336, 4: 0.3015653102503723, 5: 0.23603653690928336, 6: 0.11318080796553046}
convolution: step 4, image 5: {3: 0.11318080796553046, 4: 0.23603653690928336, 5: 0.3015653102503723, 6: 0.23603653690928336, 7: 0.11318080796553046}
convolution: step 4, image 6: {4: 0.11318080796553046, 5: 0.23603653690928336, 6: 0.3015653102503723, 7: 0.23603653690928336, 8: 0.11318080796553046}
convolution: step 4, image 7: {5: 0.11318080796553046, 6: 0.23603653690928336, 7: 0.3015653102503723, 8: 0.23603653690928336, 9: 0.11318080796553046}
convolution: step 4, image 8: {6: 0.11318080796553046, 7: 0.23603653690928336, 8: 0.3015653102503723, 9: 0.23603653690928336, 10: 0.11318080796553046}
convolution: step 4, image 9: {7: 0.11318080796553046, 8: 0.23603653690928336, 9: 0.3015653102503723, 10: 0.23603653690928336, 11: 0.11318080796553046}
convolution: step 4, image 10: {8: 0.11318080796553046, 9: 0.23603653690928336, 10: 0.3015653102503723, 11: 0.23603653690928336, 12: 0.11318080796553046}
convolution: step 4, image 11: {9: 0.11318080796553046, 10: 0.23603653690928336, 11: 0.3015653102503723, 12: 0.23603653690928336, 13: 0.11318080796553046}
convolution: step 4, image 12: {10: 0.12762557349021747, 11: 0.26616083529697554, 12: 0.34005275591583145, 13: 0.26616083529697554}
convolution: step 4, image 13: {11: 0.17391491164397846, 12: 0.36269641646162004, 13: 0.46338867189440147}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 5, image 0: {0: 0.49086370300520654, 1: 0.36274400418077, 2: 0.1463922928140235}
convolution: step 5, image 1: {0: 0.26618646133676294, 1: 0.36020243090359083, 2: 0.26618646133676294, 3: 0.10742464642288334}
convolution: step 5, image 2: {0: 0.0970040234971093, 1: 0.2403653035866392, 2: 0.32526134583250305, 3: 0.2403653035866392, 4: 0.0970040234971093}
convolution: step 5, image 3: {1: 0.0970040234971093, 2: 0.2403653035866392, 3: 0.32526134583250305, 4: 0.2403653035866392, 5: 0.0970040234971093}
convolution: step 5, image 4: {2: 0.0970040234971093, 3: 0.2403653035866392, 4: 0.32526134583250305, 5: 0.2403653035866392, 6: 0.0970040234971093}
convolution: step 5, image 5: {3: 0.0970040234971093, 4: 0.2403653035866392, 5: 0.32526134583250305, 6: 0.2403653035866392, 7: 0.0970040234971093}
convolution: step 5, image 6: {4: 0.0970040234971093, 5: 0.2403653035866392, 6: 0.32526134583250305, 7: 0.2403653035866392, 8: 0.0970040234971093}
convolution: step 5, image 7: {5: 0.0970040234971093, 6: 0.2403653035866392, 7: 0.32526134583250305, 8: 0.2403653035866392, 9: 0.0970040234971093}
convolution: step 5, image 8: {6: 0.0970040234971093, 7: 0.2403653035866392, 8: 0.32526134583250305, 9: 0.2403653035866392, 10: 0.0970040234971093}
convolution: step 5, image 9: {7: 0.0970040234971093, 8: 0.2403653035866392, 9: 0.32526134583250305, 10: 0.2403653035866392, 11: 0.0970040234971093}
convolution: step 5, image 10: {8: 0.0970040234971093, 9: 0.2403653035866392, 10: 0.32526134583250305, 11: 0.2403653035866392, 12: 0.0970040234971093}
convolution: step 5, image 11: {9: 0.0970040234971093, 10: 0.2403653035866392, 11: 0.32526134583250305, 12: 0.2403653035866392, 13: 0.0970040234971093}
convolution: step 5, image 12: {10: 0.10742464642288334, 11: 0.26618646133676294, 12: 0.36020243090359083, 13: 0.26618646133676294}
convolution: step 5, image 13: {11: 0.1463922928140235, 12: 0.36274400418077, 13: 0.49086370300520654}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 6, image 0: {0: 0.5268132348059299, 1: 0.35925541308057307, 2: 0.11393135211349699}
convolution: step 6, image 1: {0: 0.26430309537364144, 1: 0.3875748661629217, 2: 0.26430309537364144, 3: 0.08381894308979548}
convolution: step 6, image 2: {0: 0.07733666552352463, 1: 0.24386277528989792, 2: 0.357601118373155, 3: 0.24386277528989792, 4: 0.07733666552352463}
convolution: step 6, image 3: {1: 0.07733666552352463, 2: 0.24386277528989792, 3: 0.357601118373155, 4: 0.24386277528989792, 5: 0.07733666552352463}
convolution: step 6, image 4: {2: 0.07733666552352463, 3: 0.24386277528989792, 4: 0.357601118373155, 5: 0.24386277528989792, 6: 0.07733666552352463}
convolution: step 6, image 5: {3: 0.07733666552352463, 4: 0.24386277528989792, 5: 0.357601118373155, 6: 0.24386277528989792, 7: 0.07733666552352463}
convolution: step 6, image 6: {4: 0.07733666552352463, 5: 0.24386277528989792, 6: 0.357601118373155, 7: 0.24386277528989792, 8: 0.07733666552352463}
convolution: step 6, image 7: {5: 0.07733666552352463, 6: 0.24386277528989792, 7: 0.357601118373155, 8: 0.24386277528989792, 9: 0.07733666552352463}
convolution: step 6, image 8: {6: 0.07733666552352463, 7: 0.24386277528989792, 8: 0.357601118373155, 9: 0.24386277528989792, 10: 0.07733666552352463}
convolution: step 6, image 9: {7: 0.07733666552352463, 8: 0.24386277528989792, 9: 0.357601118373155, 10: 0.24386277528989792, 11: 0.07733666552352463}
convolution: step 6, image 10: {8: 0.07733666552352463, 9: 0.24386277528989792, 10: 0.357601118373155, 11: 0.24386277528989792, 12: 0.07733666552352463}
convolution: step 6, image 11: {9: 0.07733666552352463, 10: 0.24386277528989792, 11: 0.357601118373155, 12: 0.24386277528989792, 13: 0.07733666552352463}
convolution: step 6, image 12: {10: 0.08381894308979548, 11: 0.26430309537364144, 12: 0.3875748661629217, 13: 0.26430309537364144}
convolution: step 6, image 13: {11: 0.11393135211349699, 12: 0.35925541308057307, 13: 0.5268132348059299}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 7, image 0: {0: 0.5740969929676946, 1: 0.3482074278837349, 2: 0.0776955791485706}
convolution: step 7, image 1: {0: 0.25827437283171767, 1: 0.4258224521643882, 2: 0.25827437283171767, 3: 0.05762880217217644}
convolution: step 7, image 2: {0: 0.05448868454964294, 1: 0.24420134200323332, 2: 0.4026199468942474, 3: 0.24420134200323332, 4: 0.05448868454964294}
convolution: step 7, image 3: {1: 0.05448868454964294, 2: 0.24420134200323332, 3: 0.4026199468942474, 4: 0.24420134200323332, 5: 0.05448868454964294}
convolution: step 7, image 4: {2: 0.05448868454964294, 3: 0.24420134200323332, 4: 0.4026199468942474, 5: 0.24420134200323332, 6: 0.05448868454964294}
convolution: step 7, image 5: {3: 0.05448868454964294, 4: 0.24420134200323332, 5: 0.4026199468942474, 6: 0.24420134200323332, 7: 0.05448868454964294}
convolution: step 7, image 6: {4: 0.05448868454964294, 5: 0.24420134200323332, 6: 0.4026199468942474, 7: 0.24420134200323332, 8: 0.05448868454964294}
convolution: step 7, image 7: {5: 0.05448868454964294, 6: 0.24420134200323332, 7: 0.4026199468942474, 8: 0.24420134200323332, 9: 0.05448868454964294}
convolution: step 7, image 8: {6: 0.05448868454964294, 7: 0.24420134200323332, 8: 0.4026199468942474, 9: 0.24420134200323332, 10: 0.05448868454964294}
convolution: step 7, image 9: {7: 0.05448868454964294, 8: 0.24420134200323332, 9: 0.4026199468942474, 10: 0.24420134200323332, 11: 0.05448868454964294}
convolution: step 7, image 10: {8: 0.05448868454964294, 9: 0.24420134200323332, 10: 0.4026199468942474, 11: 0.24420134200323332, 12: 0.05448868454964294}
convolution: step 7, image 11: {9: 0.05448868454964294, 10: 0.24420134200323332, 11: 0.4026199468942474, 12: 0.24420134200323332, 13: 0.05448868454964294}
convolution: step 7, image 12: {10: 0.05762880217217644, 11: 0.25827437283171767, 12: 0.4258224521643882, 13: 0.25827437283171767}
convolution: step 7, image 13: {11: 0.0776955791485706, 12: 0.3482074278837349, 13: 0.5740969929676946}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 8, image 0: {0: 0.6361063592806936, 1: 0.32208330568016824, 2: 0.0418103350391381}
convolution: step 8, image 1: {0: 0.24361801128293276, 1: 0.48113939306830433, 2: 0.24361801128293276, 3: 0.03162458436583016}
convolution: step 8, image 2: {0: 0.030655128663176164, 1: 0.23614986980238736, 2: 0.46639000306887296, 3: 0.23614986980238736, 4: 0.030655128663176164}
convolution: step 8, image 3: {1: 0.030655128663176164, 2: 0.23614986980238736, 3: 0.46639000306887296, 4: 0.23614986980238736, 5: 0.030655128663176164}
convolution: step 8, image 4: {2: 0.030655128663176164, 3: 0.23614986980238736, 4: 0.46639000306887296, 5: 0.23614986980238736, 6: 0.030655128663176164}
convolution: step 8, image 5: {3: 0.030655128663176164, 4: 0.23614986980238736, 5: 0.46639000306887296, 6: 0.23614986980238736, 7: 0.030655128663176164}
convolution: step 8, image 6: {4: 0.030655128663176164, 5: 0.23614986980238736, 6: 0.46639000306887296, 7: 0.23614986980238736, 8: 0.030655128663176164}
convolution: step 8, image 7: {5: 0.030655128663176164, 6: 0.23614986980238736, 7: 0.46639000306887296, 8: 0.23614986980238736, 9: 0.030655128663176164}
convolution: step 8, image 8: {6: 0.030655128663176164, 7: 0.23614986980238736, 8: 0.46639000306887296, 9: 0.23614986980238736, 10: 0.030655128663176164}
convolution: step 8, image 9: {7: 0.030655128663176164, 8: 0.23614986980238736, 9: 0.46639000306887296, 10: 0.23614986980238736, 11: 0.030655128663176164}
convolution: step 8, image 10: {8: 0.030655128663176164, 9: 0.23614986980238736, 10: 0.46639000306887296, 11: 0.23614986980238736, 12: 0.030655128663176164}
convolution: step 8, image 11: {9: 0.030655128663176164, 10: 0.23614986980238736, 11: 0.46639000306887296, 12: 0.23614986980238736, 13: 0.030655128663176164}
convolution: step 8, image 12: {10: 0.03162458436583016, 11: 0.24361801128293276, 12: 0.48113939306830433, 13: 0.24361801128293276}
convolution: step 8, image 13: {11: 0.0418103350391381, 12: 0.32208330568016824, 13: 0.6361063592806936}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 9, image 0: {0: 0.7167676792469991, 1: 0.2690108653193587, 2: 0.014221455433642111}
convolution: step 9, image 1: {0: 0.2119846824571195, 1: 0.5648239103662975, 2: 0.2119846824571195, 3: 0.01120672471946341}
convolution: step 9, image 2: {0: 0.011082525902478017, 1: 0.20963535672285988, 2: 0.5585642347493242, 3: 0.20963535672285988, 4: 0.011082525902478017}
convolution: step 9, image 3: {1: 0.011082525902478017, 2: 0.20963535672285988, 3: 0.5585642347493242, 4: 0.20963535672285988, 5: 0.011082525902478017}
convolution: step 9, image 4: {2: 0.011082525902478017, 3: 0.20963535672285988, 4: 0.5585642347493242, 5: 0.20963535672285988, 6: 0.011082525902478017}
convolution: step 9, image 5: {3: 0.011082525902478017, 4: 0.20963535672285988, 5: 0.5585642347493242, 6: 0.20963535672285988, 7: 0.011082525902478017}
convolution: step 9, image 6: {4: 0.011082525902478017, 5: 0.20963535672285988, 6: 0.5585642347493242, 7: 0.20963535672285988, 8: 0.011082525902478017}
convolution: step 9, image 7: {5: 0.011082525902478017, 6: 0.20963535672285988, 7: 0.5585642347493242, 8: 0.20963535672285988, 9: 0.011082525902478017}
convolution: step 9, image 8: {6: 0.011082525902478017, 7: 0.20963535672285988, 8: 0.5585642347493242, 9: 0.20963535672285988, 10: 0.011082525902478017}
convolution: step 9, image 9: {7: 0.011082525902478017, 8: 0.20963535672285988, 9: 0.5585642347493242, 10: 0.20963535672285988, 11: 0.011082525902478017}
convolution: step 9, image 10: {8: 0.011082525902478017, 9: 0.20963535672285988, 10: 0.5585642347493242, 11: 0.20963535672285988, 12: 0.011082525902478017}
convolution: step 9, image 11: {9: 0.011082525902478017, 10: 0.20963535672285988, 11: 0.5585642347493242, 12: 0.20963535672285988, 13: 0.011082525902478017}
convolution: step 9, image 12: {10: 0.01120672471946341, 11: 0.2119846824571195, 12: 0.5648239103662975, 13: 0.2119846824571195}
convolution: step 9, image 13: {11: 0.014221455433642111, 12: 0.2690108653193587, 13: 0.7167676792469991}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 10, image 0: {0: 0.8207130523101699, 1: 0.17749164517732488, 2: 0.0017953025125052608}
convolution: step 10, image 1: {0: 0.15073707393532754, 1: 0.6970011682644035, 2: 0.15073707393532754, 3: 0.001524683864941476}
convolution: step 10, image 2: {0: 0.0015223627430305893, 1: 0.15050759742997494, 2: 0.695940079653989, 3: 0.15050759742997494, 4: 0.0015223627430305893}
convolution: step 10, image 3: {1: 0.0015223627430305893, 2: 0.15050759742997494, 3: 0.695940079653989, 4: 0.15050759742997494, 5: 0.0015223627430305893}
convolution: step 10, image 4: {2: 0.0015223627430305893, 3: 0.15050759742997494, 4: 0.695940079653989, 5: 0.15050759742997494, 6: 0.0015223627430305893}
convolution: step 10, image 5: {3: 0.0015223627430305893, 4: 0.15050759742997494, 5: 0.695940079653989, 6: 0.15050759742997494, 7: 0.0015223627430305893}
convolution: step 10, image 6: {4: 0.0015223627430305893, 5: 0.15050759742997494, 6: 0.695940079653989, 7: 0.15050759742997494, 8: 0.0015223627430305893}
convolution: step 10, image 7: {5: 0.0015223627430305893, 6: 0.15050759742997494, 7: 0.695940079653989, 8: 0.15050759742997494, 9: 0.0015223627430305893}
convolution: step 10, image 8: {6: 0.0015223627430305893, 7: 0.15050759742997494, 8: 0.695940079653989, 9: 0.15050759742997494, 10: 0.0015223627430305893}
convolution: step 10, image 9: {7: 0.0015223627430305893, 8: 0.15050759742997494, 9: 0.695940079653989, 10: 0.15050759742997494, 11: 0.0015223627430305893}
convolution: step 10, image 10: {8: 0.0015223627430305893, 9: 0.15050759742997494, 10: 0.695940079653989, 11: 0.15050759742997494, 12: 0.0015223627430305893}
convolution: step 10, image 11: {9: 0.0015223627430305893, 10: 0.15050759742997494, 11: 0.695940079653989, 12: 0.15050759742997494, 13: 0.0015223627430305893}
convolution: step 10, image 12: {10: 0.001524683864941476, 11: 0.15073707393532754, 12: 0.6970011682644035, 13: 0.15073707393532754}
convolution: step 10, image 13: {11: 0.0017953025125052608, 12: 0.17749164517732488, 13: 0.8207130523101699}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 11, image 0: {0: 0.9383088282923016, 1: 0.06167365867155375, 2: 1.7513036144605368e-05}
convolution: step 11, image 1: {0: 0.05809097566640627, 1: 0.8838015529803992, 2: 0.05809097566640627, 3: 1.64956867880842e-05}
convolution: step 11, image 2: {0: 1.6495414684890126e-05, 1: 0.05809001743167321, 2: 0.8837869743072838, 3: 0.05809001743167321, 4: 1.6495414684890126e-05}
convolution: step 11, image 3: {1: 1.6495414684890126e-05, 2: 0.05809001743167321, 3: 0.8837869743072838, 4: 0.05809001743167321, 5: 1.6495414684890126e-05}
convolution: step 11, image 4: {2: 1.6495414684890126e-05, 3: 0.05809001743167321, 4: 0.8837869743072838, 5: 0.05809001743167321, 6: 1.6495414684890126e-05}
convolution: step 11, image 5: {3: 1.6495414684890126e-05, 4: 0.05809001743167321, 5: 0.8837869743072838, 6: 0.05809001743167321, 7: 1.6495414684890126e-05}
convolution: step 11, image 6: {4: 1.6495414684890126e-05, 5: 0.05809001743167321, 6: 0.8837869743072838, 7: 0.05809001743167321, 8: 1.6495414684890126e-05}
convolution: step 11, image 7: {5: 1.6495414684890126e-05, 6: 0.05809001743167321, 7: 0.8837869743072838, 8: 0.05809001743167321, 9: 1.6495414684890126e-05}
convolution: step 11, image 8: {6: 1.6495414684890126e-05, 7: 0.05809001743167321, 8: 0.8837869743072838, 9: 0.05809001743167321, 10: 1.6495414684890126e-05}
convolution: step 11, image 9: {7: 1.6495414684890126e-05, 8: 0.05809001743167321, 9: 0.8837869743072838, 10: 0.05809001743167321, 11: 1.6495414684890126e-05}
convolution: step 11, image 10: {8: 1.6495414684890126e-05, 9: 0.05809001743167321, 10: 0.8837869743072838, 11: 0.05809001743167321, 12: 1.6495414684890126e-05}
convolution: step 11, image 11: {9: 1.6495414684890126e-05, 10: 0.05809001743167321, 11: 0.8837869743072838, 12: 0.05809001743167321, 13: 1.6495414684890126e-05}
convolution: step 11, image 12: {10: 1.6495686788084208e-05, 11: 0.05809097566640628, 12: 0.8838015529803994, 13: 0.05809097566640628}
convolution: step 11, image 13: {11: 1.751303614460537e-05, 12: 0.06167365867155376, 13: 0.9383088282923018}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 12, image 0: {0: 0.9978172835318574, 1: 0.0021827164452953196, 2: 2.2847370036903145e-11}
convolution: step 12, image 1: {0: 0.002177962570575287, 1: 0.9956440748360518, 2: 0.002177962570575287, 3: 2.2797609320126685e-11}
convolution: step 12, image 2: {0: 2.2797609319606957e-11, 1: 0.002177962570525635, 2: 0.9956440748133536, 3: 0.002177962570525635, 4: 2.2797609319606957e-11}
convolution: step 12, image 3: {1: 2.2797609319606957e-11, 2: 0.002177962570525635, 3: 0.9956440748133536, 4: 0.002177962570525635, 5: 2.2797609319606957e-11}
convolution: step 12, image 4: {2: 2.2797609319606957e-11, 3: 0.002177962570525635, 4: 0.9956440748133536, 5: 0.002177962570525635, 6: 2.2797609319606957e-11}
convolution: step 12, image 5: {3: 2.2797609319606957e-11, 4: 0.002177962570525635, 5: 0.9956440748133536, 6: 0.002177962570525635, 7: 2.2797609319606957e-11}
convolution: step 12, image 6: {4: 2.2797609319606957e-11, 5: 0.002177962570525635, 6: 0.9956440748133536, 7: 0.002177962570525635, 8: 2.2797609319606957e-11}
convolution: step 12, image 7: {5: 2.2797609319606957e-11, 6: 0.002177962570525635, 7: 0.9956440748133536, 8: 0.002177962570525635, 9: 2.2797609319606957e-11}
convolution: step 12, image 8: {6: 2.2797609319606957e-11, 7: 0.002177962570525635, 8: 0.9956440748133536, 9: 0.002177962570525635, 10: 2.2797609319606957e-11}
convolution: step 12, image 9: {7: 2.2797609319606957e-11, 8: 0.002177962570525635, 9: 0.9956440748133536, 10: 0.002177962570525635, 11: 2.2797609319606957e-11}
convolution: step 12, image 10: {8: 2.2797609319606957e-11, 9: 0.002177962570525635, 10: 0.9956440748133536, 11: 0.002177962570525635, 12: 2.2797609319606957e-11}
convolution: step 12, image 11: {9: 2.2797609319606957e-11, 10: 0.002177962570525635, 11: 0.9956440748133536, 12: 0.002177962570525635, 13: 2.2797609319606957e-11}
convolution: step 12, image 12: {10: 2.2797609320126685e-11, 11: 0.002177962570575287, 12: 0.9956440748360518, 13: 0.002177962570575287}
convolution: step 12, image 13: {11: 2.2847370036903145e-11, 12: 0.0021827164452953196, 13: 0.9978172835318574}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 13, image 0: {0: 0.9999999999771028, 1: 2.2897348455930755e-11, 2: 2.748785007847041e-43}
convolution: step 13, image 1: {0: 2.289734845540647e-11, 1: 0.9999999999542055, 2: 2.289734845540647e-11, 3: 2.7487850077841012e-43}
convolution: step 13, image 2: {0: 2.7487850077841012e-43, 1: 2.289734845540647e-11, 2: 0.9999999999542055, 3: 2.289734845540647e-11, 4: 2.7487850077841012e-43}
convolution: step 13, image 3: {1: 2.7487850077841012e-43, 2: 2.289734845540647e-11, 3: 0.9999999999542055, 4: 2.289734845540647e-11, 5: 2.7487850077841012e-43}
convolution: step 13, image 4: {2: 2.7487850077841012e-43, 3: 2.289734845540647e-11, 4: 0.9999999999542055, 5: 2.289734845540647e-11, 6: 2.7487850077841012e-43}
convolution: step 13, image 5: {3: 2.7487850077841012e-43, 4: 2.289734845540647e-11, 5: 0.9999999999542055, 6: 2.289734845540647e-11, 7: 2.7487850077841012e-43}
convolution: step 13, image 6: {4: 2.7487850077841012e-43, 5: 2.289734845540647e-11, 6: 0.9999999999542055, 7: 2.289734845540647e-11, 8: 2.7487850077841012e-43}
convolution: step 13, image 7: {5: 2.7487850077841012e-43, 6: 2.289734845540647e-11, 7: 0.9999999999542055, 8: 2.289734845540647e-11, 9: 2.7487850077841012e-43}
convolution: step 13, image 8: {6: 2.7487850077841012e-43, 7: 2.289734845540647e-11, 8: 0.9999999999542055, 9: 2.289734845540647e-11, 10: 2.7487850077841012e-43}
convolution: step 13, image 9: {7: 2.7487850077841012e-43, 8: 2.289734845540647e-11, 9: 0.9999999999542055, 10: 2.289734845540647e-11, 11: 2.7487850077841012e-43}
convolution: step 13, image 10: {8: 2.7487850077841012e-43, 9: 2.289734845540647e-11, 10: 0.9999999999542055, 11: 2.289734845540647e-11, 12: 2.7487850077841012e-43}
convolution: step 13, image 11: {9: 2.7487850077841012e-43, 10: 2.289734845540647e-11, 11: 0.9999999999542055, 12: 2.289734845540647e-11, 13: 2.7487850077841012e-43}
convolution: step 13, image 12: {10: 2.7487850077841012e-43, 11: 2.289734845540647e-11, 12: 0.9999999999542055, 13: 2.289734845540647e-11}
convolution: step 13, image 13: {11: 2.748785007847041e-43, 12: 2.2897348455930755e-11, 13: 0.9999999999771028}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
convolution: step 14, image 0: {0: 1.0, 1: 0.0, 2: 0.0}
convolution: step 14, image 1: {0: 0.0, 1: 1.0, 2: 0.0, 3: 0.0}
convolution: step 14, image 2: {0: 0.0, 1: 0.0, 2: 1.0, 3: 0.0, 4: 0.0}
convolution: step 14, image 3: {1: 0.0, 2: 0.0, 3: 1.0, 4: 0.0, 5: 0.0}
convolution: step 14, image 4: {2: 0.0, 3: 0.0, 4: 1.0, 5: 0.0, 6: 0.0}
convolution: step 14, image 5: {3: 0.0, 4: 0.0, 5: 1.0, 6: 0.0, 7: 0.0}
convolution: step 14, image 6: {4: 0.0, 5: 0.0, 6: 1.0, 7: 0.0, 8: 0.0}
convolution: step 14, image 7: {5: 0.0, 6: 0.0, 7: 1.0, 8: 0.0, 9: 0.0}
convolution: step 14, image 8: {6: 0.0, 7: 0.0, 8: 1.0, 9: 0.0, 10: 0.0}
convolution: step 14, image 9: {7: 0.0, 8: 0.0, 9: 1.0, 10: 0.0, 11: 0.0}
convolution: step 14, image 10: {8: 0.0, 9: 0.0, 10: 1.0, 11: 0.0, 12: 0.0}
convolution: step 14, image 11: {9: 0.0, 10: 0.0, 11: 1.0, 12: 0.0, 13: 0.0}
convolution: step 14, image 12: {10: 0.0, 11: 0.0, 12: 1.0, 13: 0.0}
convolution: step 14, image 13: {11: 0.0, 12: 0.0, 13: 1.0}
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
Block diagonal conditioning requested for positive conditionings, using block diagonal conditioning.
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [08:56<00:00, 27.33s/it]100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 20/20 [08:56<00:00, 26.82s/it]
Requested to load AutoencoderKL
Loading 1 new model
Comfy-VFI: Clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Clearing cache...
Comfy-VFI: Done cache clearing
Comfy-VFI: Final clearing cache...
Comfy-VFI: Done cache clearing
Prompt executed in 573.38 seconds
gc collect

Stopped server
